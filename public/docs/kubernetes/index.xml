<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn kubenetes on KubeDaily</title>
    <link>//localhost:1313/docs/kubernetes/</link>
    <description>Recent content in Learn kubenetes on KubeDaily</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 30 May 2024 03:41:02 +0530</lastBuildDate>
    <atom:link href="//localhost:1313/docs/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pre-requisites</title>
      <link>//localhost:1313/docs/kubernetes/pre-requisites-kubeadm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/pre-requisites-kubeadm/</guid>
      <description>&lt;h4 id=&#34;includes-configuring-pre-requisites-to-install-kubeadm&#34;&gt;Includes configuring pre-requisites to install kubeadm &lt;a href=&#34;#includes-configuring-pre-requisites-to-install-kubeadm&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h6 id=&#34;step-01-enable-following-ports-and-protcols&#34;&gt;step 01) Enable following ports and protcols &lt;a href=&#34;#step-01-enable-following-ports-and-protcols&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h6&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;0c4c063&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;on kubemaster : Open following ports : https://kubernetes.io/docs/reference/networking/ports-and-protocols/&#xA;&#xA;sudo ufw status&#xA;sudo ufw enable&#xA;sudo ufw allow 80/tcp&#xA;sudo ufw allow 443/tcp&#xA;sudo ufw allow 22/tcp&#xA;sudo ufw allow 6443/tcp&#xA;sudo ufw allow 2379/tcp&#xA;sudo ufw allow 2380/tcp&#xA;sudo ufw allow 10250/tcp&#xA;sudo ufw allow 10259/tcp&#xA;sudo ufw allow 10257/tcp&#xA;sudo ufw allow 30000:32767/tcp&#xA;sudo ufw reload&#xA;sudo ufw status&#xA;&#xA;######  ----- kubenode01, kubenode02 ---#&#xA;&#xA;sudo ufw status&#xA;sudo ufw enable&#xA;sudo ufw allow 80/tcp&#xA;sudo ufw allow 443/tcp&#xA;sudo ufw allow 22/tcp&#xA;sudo ufw allow 10250/tcp&#xA;sudo ufw allow 30000:32767/tcp&#xA;sudo ufw reload&#xA;sudo ufw status&#xA;&#xA;sudo iptables -L    #--- on all nodes&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h6 id=&#34;step-02&#34;&gt;step 02) &lt;a href=&#34;#step-02&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h6&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;c5d2cb2&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;------ Install Container Runtime ----------#&#xA;&#xA;#---- on all nodes : Forwarding IPv4 and letting iptables see bridged traffic : https://kubernetes.io/docs/setup/production-environment/container-runtimes/#forwarding-ipv4-and-letting-iptables-see-bridged-traffic&#xA;&#xA;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/modules-load.d/k8s.conf&#xA;overlay&#xA;br_netfilter&#xA;EOF&#xA;&#xA;sudo modprobe overlay&#xA;sudo modprobe br_netfilter&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h6 id=&#34;sysctl-params-required-by-setup-params-persist-across-reboots&#34;&gt;sysctl params required by setup, params persist across reboots &lt;a href=&#34;#sysctl-params-required-by-setup-params-persist-across-reboots&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h6&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;4f8b547&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/sysctl.d/k8s.conf&#xA;net.bridge.bridge-nf-call-iptables  = 1&#xA;net.bridge.bridge-nf-call-ip6tables = 1&#xA;net.ipv4.ip_forward                 = 1&#xA;EOF&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h6 id=&#34;apply-sysctl-params-without-reboot&#34;&gt;Apply sysctl params without reboot &lt;a href=&#34;#apply-sysctl-params-without-reboot&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h6&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;a891a25&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo sysctl --system&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h6 id=&#34;verify-that-the-br_netfilter-overlay-modules-are-loaded&#34;&gt;Verify that the br_netfilter, overlay modules are loaded &lt;a href=&#34;#verify-that-the-br_netfilter-overlay-modules-are-loaded&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h6&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;aeade09&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;lsmod | grep br_netfilter&#xA;lsmod | grep overlay&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h6 id=&#34;verify-that-the-netbridgebridge-nf-call-iptables-netbridgebridge-nf-call-ip6tables-and-netipv4ip_forward-system-variables-are-set-to-1-in-sysctl-config&#34;&gt;Verify that the net.bridge.bridge-nf-call-iptables, net.bridge.bridge-nf-call-ip6tables, and net.ipv4.ip_forward system variables are set to 1 in sysctl config &lt;a href=&#34;#verify-that-the-netbridgebridge-nf-call-iptables-netbridgebridge-nf-call-ip6tables-and-netipv4ip_forward-system-variables-are-set-to-1-in-sysctl-config&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h6&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;d4fc340&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h6 id=&#34;we-are-selecting-option-2-here-using-apt-get&#34;&gt;We are selecting option 2 here using apt-get &lt;a href=&#34;#we-are-selecting-option-2-here-using-apt-get&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h6&gt;&lt;p&gt;install via package manager : &lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34; rel=&#34;external&#34; target=&#34;_blank&#34;&gt;https://docs.docker.com/engine/install/ubuntu/&lt;svg width=&#34;16&#34; height=&#34;16&#34; viewBox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z&#34;/&gt;&lt;/svg&gt;&lt;/a&gt;&#xA;Remove old versions&lt;/p&gt;</description>
    </item>
    <item>
      <title>kubeadm</title>
      <link>//localhost:1313/docs/kubernetes/kubeadm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/kubeadm/</guid>
      <description>&lt;h3 id=&#34;install-kubeadm-kubectl-and-kubelet-on-all-nodes&#34;&gt;Install kubeadm, kubectl and kubelet on all nodes &lt;a href=&#34;#install-kubeadm-kubectl-and-kubelet-on-all-nodes&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;551e402&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo apt-get update&#xA;sudo apt-get install -y apt-transport-https ca-certificates curl&#xA;&#xA;sudo mkdir -m 755 /etc/apt/keyrings&#xA;&#xA;curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.27/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg&#xA;&#xA;echo &amp;#39;deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /&amp;#39; | sudo tee /etc/apt/sources.list.d/kubernetes.list&#xA;&#xA;sudo apt-get update&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;to-see-the-new-version-labels&#34;&gt;To see the new version labels &lt;a href=&#34;#to-see-the-new-version-labels&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;f6f771f&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo apt-cache madison kubeadm&#xA;&#xA;sudo apt-get install -y kubelet=1.30 kubeadm=1.30 kubectl=1.30&#xA;&#xA;sudo apt-mark hold kubelet kubeadm kubectl&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h1 id=&#34;in-master-node&#34;&gt;in master node &lt;a href=&#34;#in-master-node&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;1f23dbd&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;ifconfig eth0&#xA;&#xA;kubeadm init --apiserver-cert-extra-sans=controlplane --apiserver-advertise-address  192.168.129.135 --pod-network-cidr=10.244.0.0/16&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;control-plane&#34;&gt;control plane &lt;a href=&#34;#control-plane&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;6d63461&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;#!/bin/bash&#xA;&#xA;# Step 04 ) Cluster Creation : https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/&#xA;&#xA;# Initialize control-plane node : https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#initializing-your-control-plane-node&#xA;&#xA;# we dont have multiple control plane nodes&#xA;# Choose POD Network Addon &#xA;# --pod-network-cidr , --apiserver-advertise-address&#xA;sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.56.11&#xA;&#xA;#---------  Cluster Configuration Completed------------------#&#xA;&#xA;mkdir -p $HOME/.kube&#xA;sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config&#xA;sudo chown $(id -u):$(id -g) $HOME/.kube/config&#xA;&#xA;# Message from Kubernetes Configuration:&#xA;Your Kubernetes control-plane has initialized successfully!&#xA;&#xA;To start using your cluster, you need to run the following as a regular user:&#xA;&#xA;  mkdir -p $HOME/.kube&#xA;  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config&#xA;  sudo chown $(id -u):$(id -g) $HOME/.kube/config&#xA;&#xA;Alternatively, if you are the root user, you can run:&#xA;&#xA;  export KUBECONFIG=/etc/kubernetes/admin.conf&#xA;&#xA;You should now deploy a pod network to the cluster.&#xA;Run &amp;#34;kubectl apply -f [podnetwork].yaml&amp;#34; with one of the options listed at:&#xA;  https://kubernetes.io/docs/concepts/cluster-administration/addons/&#xA;&#xA;Then you can join any number of worker nodes by running the following on each as root:&#xA;&#xA;kubeadm join 192.168.56.11:6443 --token rfmw9v.exud3pc7riu0vnb4 \&#xA;        --discovery-token-ca-cert-hash sha256:d2e00be36a8b5e7b8034800fecd271355e6fd2af2c5d7618b5c98f64b510a0d9&#xA;&#xA;kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml&#xA;kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml&#xA;kubectl apply -f https://github.com/weaveworks/weave/releases/download/latest_release/weave-daemonset-k8s-1.11.yaml&#xA;&#xA;kubectl get pods -A  #now it shows the containres are up and running&#xA;# What did I change : Make sure you remove ipv6 settings , if its an Azure environment makesure on NIC , IP Forwarding is enabled&#xA;&#xA;# Now add weavenet address space&#xA;# If you set --cluster-cidr option in kube-proxy make sure it matches the IPALLOC_RANGE given to Weavenet&#xA;# ealier we passed : 10.244.0.0/16 as pod network, make sure to pass the same to enviorment variable of IPALLOC_RANGE&#xA;container:&#xA;  - name: weave&#xA;    env:&#xA;      -name: IPALLOC_RANGE&#xA;       value: 10.244.0.0/16&#xA;&#xA;kubectl get ds -A&#xA;kubectl edit ds weave-net -n kube-system&#xA;# save above config&#xA;kubectl get pods -A&#xA;&#xA;#---- on Worker Nodes -------------------#&#xA;sudo kubeadm join 192.168.56.11:6443 --token rfmw9v.exud3pc7riu0vnb4 \&#xA;        --discovery-token-ca-cert-hash sha256:d2e00be36a8b5e7b8034800fecd271355e6fd2af2c5d7618b5c98f64b510a0d9&#xA;&#xA;#--- I have successfully spun an kubernetes cluster , I can -----------#&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;note&#34;&gt;NOTE &lt;a href=&#34;#note&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;1074de3&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;#!/bin/bash&#xA;&#xA;# Update the system&#xA;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade -y&#xA;&#xA;# Enable and start the kubelet service&#xA;sudo systemctl enable kubelet.service&#xA;sudo systemctl start kubelet.service&#xA;&#xA;# Ensure net.bridge.bridge-nf-call-iptables is set to 1&#xA;sudo modprobe br_netfilter&#xA;echo &amp;#34;1&amp;#34; | sudo tee /proc/sys/net/bridge/bridge-nf-call-iptables&#xA;&#xA;# Make the setting persistent across reboots&#xA;echo &amp;#34;net.bridge.bridge-nf-call-iptables=1&amp;#34; | sudo tee -a /etc/sysctl.conf&#xA;sudo sysctl -p /etc/sysctl.conf&#xA;&#xA;# Initialize the Kubernetes cluster&#xA;sudo kubeadm init --cri-socket=unix:///var/run/containerd/containerd.sock --pod-network-cidr=192.168.0.0/16&#xA;&#xA;# Setting up local kubeconfig&#xA;mkdir -p $HOME/.kube&#xA;sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config&#xA;sudo chown $(id -u):$(id -g) $HOME/.kube/config&#xA;&#xA;# Apply a CNI (Container Network Interface) plugin - example with Calico&#xA;kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml&#xA;&#xA;echo &amp;#34;Kubernetes cluster initialized successfully!&amp;#34;&#xA;&#xA;angam@sangam:~$ kubectl get nodes -o wide&#xA;error: error loading config file &amp;#34;/etc/kubernetes/kubelet.conf&amp;#34;: open /etc/kubernetes/kubelet.conf: permission denied&#xA;sangam@sangam:~$ export KUBECONFIG=~/.kube/config&#xA;echo $KUBECONFIG  # Verify it&amp;#39;s set correctly&#xA;/home/sangam/.kube/config&#xA;sangam@sangam:~$ echo &amp;#34;export KUBECONFIG=~/.kube/config&amp;#34; &amp;gt;&amp;gt; ~/.bashrc&#xA;source ~/.bashrc&#xA;sangam@sangam:~$ chmod 644 ~/.kube/config  # Set read and write for owner, read for others&#xA;sangam@sangam:~$ kubectl get nodes -o wide&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h2 id=&#34;if-your-using-containerd-install&#34;&gt;if your using containerd install &lt;a href=&#34;#if-your-using-containerd-install&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;dc00035&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;# Configure persistent loading of modules&#xA;sudo tee /etc/modules-load.d/containerd.conf &amp;lt;&amp;lt;EOF&#xA;overlay&#xA;br_netfilter&#xA;EOF&#xA;&#xA;# Load at runtime&#xA;sudo modprobe overlay&#xA;sudo modprobe br_netfilter&#xA;&#xA;# Ensure sysctl params are set&#xA;sudo tee /etc/sysctl.d/kubernetes.conf&amp;lt;&amp;lt;EOF&#xA;net.bridge.bridge-nf-call-ip6tables = 1&#xA;net.bridge.bridge-nf-call-iptables = 1&#xA;net.ipv4.ip_forward = 1&#xA;EOF&#xA;&#xA;# Reload configs&#xA;sudo sysctl --system&#xA;&#xA;# Install required packages&#xA;sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates&#xA;&#xA;# Add Docker repo&#xA;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg&#xA;sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34;&#xA;&#xA;# Install containerd&#xA;sudo apt update&#xA;sudo apt install -y containerd.io&#xA;&#xA;# Configure containerd and start service&#xA;sudo mkdir -p /etc/containerd&#xA;sudo containerd config default|sudo tee /etc/containerd/config.toml&#xA;&#xA;# restart containerd&#xA;sudo systemctl restart containerd&#xA;sudo systemctl enable containerd&#xA;systemctl status  containerd&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;if-your-using-docker&#34;&gt;if your using docker &lt;a href=&#34;#if-your-using-docker&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;cbf5364&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;# Add repo and Install packages&#xA;sudo apt update&#xA;sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates&#xA;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg&#xA;sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34;&#xA;sudo apt update&#xA;sudo apt install -y containerd.io docker-ce docker-ce-cli&#xA;&#xA;# Create required directories&#xA;sudo mkdir -p /etc/systemd/system/docker.service.d&#xA;&#xA;# Create daemon json config file&#xA;sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;EOF&#xA;{&#xA;  &amp;#34;exec-opts&amp;#34;: [&amp;#34;native.cgroupdriver=systemd&amp;#34;],&#xA;  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,&#xA;  &amp;#34;log-opts&amp;#34;: {&#xA;    &amp;#34;max-size&amp;#34;: &amp;#34;100m&amp;#34;&#xA;  },&#xA;  &amp;#34;storage-driver&amp;#34;: &amp;#34;overlay2&amp;#34;&#xA;}&#xA;EOF&#xA;&#xA;# Start and enable Services&#xA;sudo systemctl daemon-reload &#xA;sudo systemctl restart docker&#xA;sudo systemctl enable docker&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;if-your-using-crio&#34;&gt;if your using crio &lt;a href=&#34;#if-your-using-crio&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;d78a9e5&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;# Ensure you load modules&#xA;sudo modprobe overlay&#xA;sudo modprobe br_netfilter&#xA;&#xA;# Set up required sysctl params&#xA;sudo tee /etc/sysctl.d/kubernetes.conf&amp;lt;&amp;lt;EOF&#xA;net.bridge.bridge-nf-call-ip6tables = 1&#xA;net.bridge.bridge-nf-call-iptables = 1&#xA;net.ipv4.ip_forward = 1&#xA;EOF&#xA;&#xA;# Reload sysctl&#xA;sudo sysctl --system&#xA;&#xA;# Add Cri-o repo&#xA;OS=&amp;#34;xUbuntu_20.04&amp;#34;&#xA;VERSION=1.28&#xA;echo &amp;#34;deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /&amp;#34; &amp;gt; /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list&#xA;echo &amp;#34;deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /&amp;#34; &amp;gt; /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list&#xA;curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | apt-key add -&#xA;curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key add -&#xA;&#xA;# Install CRI-O&#xA;sudo apt update&#xA;sudo apt install cri-o cri-o-runc -y&#xA;&#xA;# Update CRI-O CIDR subnet&#xA;sudo sed -i &amp;#39;s/10.85.0.0/172.24.0.0/g&amp;#39; /etc/cni/net.d/100-crio-bridge.conf&#xA;sudo sed -i &amp;#39;s/10.85.0.0/172.24.0.0/g&amp;#39; /etc/cni/net.d/100-crio-bridge.conflist&#xA;&#xA;# Start and enable Service&#xA;sudo systemctl daemon-reload&#xA;sudo systemctl restart crio&#xA;sudo systemctl enable crio&#xA;sudo systemctl status crio&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;</description>
    </item>
    <item>
      <title>HA Cluster</title>
      <link>//localhost:1313/docs/kubernetes/ha-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/ha-cluster/</guid>
      <description>&lt;p&gt;Kubernetes utilizes a microservices architecture, with all requests initially directed to a central API server microservice, supported by various other components. For high availability in a Kubernetes cluster, it&amp;rsquo;s common to add more control plane nodes, each hosting additional instances of the API Server, Scheduler, and Controller Manager. If etcd is part of the control plane nodes, additional members will also be added to the etcd cluster.&lt;/p&gt;&#xA;&lt;p&gt;In a setup with multiple control plane nodes, several API Servers operate concurrently in a highly available configuration, all interfacing with the same etcd cluster. This setup ensures that client requests are processed consistently using the shared data. Communication with the API Servers is managed through a single endpoint, such as an external load balancer, which directs traffic to all API Server instances.&lt;/p&gt;</description>
    </item>
    <item>
      <title>kubeadm upgrade &amp; downgrade </title>
      <link>//localhost:1313/docs/kubernetes/kubeadm-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/kubeadm-upgrade/</guid>
      <description>&lt;p&gt;Perform Version Upgrades on a Kubernetes Cluster using kubeadm&lt;/p&gt;&#xA;&lt;p&gt;Upgrading a Kubernetes cluster involves updating its core components, which include the Kubernetes API Server, Scheduler, Controller Manager, etcd, and Kubelets. Kubeadm simplifies this process by managing the container versions of these control plane components. Additional tasks such as renewing certificates and updating kubelet configurations are also handled by Kubeadm, utilizing the kubeadm upgrade commands.&lt;/p&gt;&#xA;&lt;p&gt;When planning an upgrade, you must first decide on the target version. Updates to major APIs typically accompany minor version releases (e.g., from 1.25 to 1.26), while patch releases (e.g., 1.26.0 to 1.26.1) focus on fixes and security enhancements. It&amp;rsquo;s important to note that Kubeadm supports upgrading only one minor version at a time. For instance, to upgrade from version 1.24 to 1.26, you must first upgrade to 1.25 and then proceed to 1.26. The version of the kubeadm tool itself dictates the highest Kubernetes version to which you can upgrade (e.g., kubeadm 1.25.0 cannot upgrade a cluster to Kubernetes 1.26.0).&lt;/p&gt;</description>
    </item>
    <item>
      <title>etcd Backup and Restore</title>
      <link>//localhost:1313/docs/kubernetes/etcd-backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/etcd-backup/</guid>
      <description>&lt;p&gt;etcd Backup and Restore&lt;/p&gt;&#xA;&lt;p&gt;Etcd maintains the active state of the cluster, with the API Servers interacting by writing to and retrieving data from it. Each transaction executed in etcd is logged in a Write-Ahead Log (WAL) file specific to each cluster member. These files, which are updated by transactions initiated by the cluster&amp;rsquo;s &amp;ldquo;leader,&amp;rdquo; are periodically condensed into snapshots to conserve space. This snapshotting process is an integral part of etcd&amp;rsquo;s routine operations, and snapshots can also be manually triggered using the etcdctl tool with the &lt;code&gt;snapshot save&lt;/code&gt; command.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basics of Pod</title>
      <link>//localhost:1313/docs/kubernetes/basics-of-pods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/basics-of-pods/</guid>
      <description>&lt;h4 id=&#34;0-what-is-pod-learn-via-kubectl-explain&#34;&gt;0. What is POD learn via Kubectl Explain &lt;a href=&#34;#0-what-is-pod-learn-via-kubectl-explain&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;3adb4e0&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;kubectl explain pod &#xA;KIND:     Pod&#xA;VERSION:  v1&#xA;&#xA;DESCRIPTION:&#xA;     Pod is a collection of containers that can run on a host. This resource is&#xA;     created by clients and scheduled onto hosts.&#xA;&#xA;FIELDS:&#xA;   apiVersion   &amp;lt;string&amp;gt;&#xA;     APIVersion defines the versioned schema of this representation of an&#xA;     object. Servers should convert recognized schemas to the latest internal&#xA;     value, and may reject unrecognized values. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#xA;&#xA;   kind &amp;lt;string&amp;gt;&#xA;     Kind is a string value representing the REST resource this object&#xA;     represents. Servers may infer this from the endpoint the client submits&#xA;     requests to. Cannot be updated. In CamelCase. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#xA;&#xA;   metadata     &amp;lt;Object&amp;gt;&#xA;     Standard object&amp;#39;s metadata. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&#xA;&#xA;   spec &amp;lt;Object&amp;gt;&#xA;     Specification of the desired behavior of the pod. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status&#xA;&#xA;   status       &amp;lt;Object&amp;gt;&#xA;     Most recently observed status of the pod. This data may not be up to date.&#xA;     Populated by the system. Read-only. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;1-create-a-pod-from-nginx-image&#34;&gt;1. Create a Pod from Nginx Image &lt;a href=&#34;#1-create-a-pod-from-nginx-image&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;4379d7d&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8sworkshop git:(main) ✗ kubectl run nginx --image=nginx&#xA;&#xA;pod/nginx created&#xA;&#xA;➜ k8sworkshop git:(main) ✗ kubectl get pods&#xA;NAME    READY   STATUS    RESTARTS   AGE&#xA;nginx   1/1     Running   0          25s&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;2-create-a-pod-and-expose-a-port&#34;&gt;2. Create a Pod and Expose a Port &lt;a href=&#34;#2-create-a-pod-and-expose-a-port&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;eb00481&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8sworkshop git:(main) ✗ kubectl run nginx-port --image=nginx --port=80&#xA;pod/nginx-port created&#xA;➜  k8sworkshop git:(main) ✗ kubectl describe pod nginx-port&#xA;Name:             nginx-port&#xA;Namespace:        default&#xA;Priority:         0&#xA;Service Account:  default&#xA;Node:             minikube/192.168.49.2&#xA;Start Time:       Mon, 06 Mar 2023 01:44:56 &amp;#43;0530&#xA;Labels:           run=nginx-port&#xA;Annotations:      &amp;lt;none&amp;gt;&#xA;Status:           Running&#xA;IP:               172.17.0.4&#xA;IPs:&#xA;  IP:  172.17.0.4&#xA;Containers:&#xA;  nginx-port:&#xA;    Container ID:   docker://8260b161cc305d1cf4060dff9edbd0b05e86d9c4fc441b5a0a51b9dbe35403d3&#xA;    Image:          nginx&#xA;    Image ID:       docker-pullable://nginx@sha256:aa0afebbb3cfa473099a62c4b32e9b3fb73ed23f2a75a65ce1d4b4f55a5c2ef2&#xA;    Port:           80/TCP&#xA;    Host Port:      0/TCP&#xA;    State:          Running&#xA;      Started:      Mon, 06 Mar 2023 01:44:59 &amp;#43;0530&#xA;    Ready:          True&#xA;    Restart Count:  0&#xA;    Environment:    &amp;lt;none&amp;gt;&#xA;    Mounts:&#xA;      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ffpjx (ro)&#xA;Conditions:&#xA;  Type              Status&#xA;  Initialized       True &#xA;  Ready             True &#xA;  ContainersReady   True &#xA;  PodScheduled      True &#xA;Volumes:&#xA;  kube-api-access-ffpjx:&#xA;    Type:                    Projected (a volume that contains injected data from multiple sources)&#xA;    TokenExpirationSeconds:  3607&#xA;    ConfigMapName:           kube-root-ca.crt&#xA;    ConfigMapOptional:       &amp;lt;nil&amp;gt;&#xA;    DownwardAPI:             true&#xA;QoS Class:                   BestEffort&#xA;Node-Selectors:              &amp;lt;none&amp;gt;&#xA;Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s&#xA;                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s&#xA;Events:&#xA;  Type    Reason     Age   From               Message&#xA;  ----    ------     ----  ----               -------&#xA;  Normal  Scheduled  20s   default-scheduler  Successfully assigned default/nginx-port to minikube&#xA;  Normal  Pulling    20s   kubelet            Pulling image &amp;#34;nginx&amp;#34;&#xA;  Normal  Pulled     18s   kubelet            Successfully pulled image &amp;#34;nginx&amp;#34; in 2.236192917s&#xA;  Normal  Created    18s   kubelet            Created container nginx-port&#xA;  Normal  Started    18s   kubelet            Started container nginx-port&#xA;➜  k8sworkshop git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;3-output-the-manifest-file&#34;&gt;3. Output the Manifest File &lt;a href=&#34;#3-output-the-manifest-file&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;b7a8db3&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;kubectl run nginx --image=nginx --port=80 --dry-run=client -o yaml&#xA;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  creationTimestamp: null&#xA;  labels:&#xA;    run: nginx&#xA;  name: nginx&#xA;spec:&#xA;  containers:&#xA;  - image: nginx&#xA;    name: nginx&#xA;    ports:&#xA;    - containerPort: 80&#xA;    resources: {}&#xA;  dnsPolicy: ClusterFirst&#xA;  restartPolicy: Always&#xA;status: {}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;alternative&lt;/p&gt;</description>
    </item>
    <item>
      <title>Labels and Selectors </title>
      <link>//localhost:1313/docs/kubernetes/labels-and-selectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/labels-and-selectors/</guid>
      <description>&lt;h4 id=&#34;labels----maps-aka-dictionaries&#34;&gt;Labels -  Maps (aka Dictionaries) &lt;a href=&#34;#labels----maps-aka-dictionaries&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;1bb9278&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl explain deployment.metadata.labels&#xA;KIND:     Deployment&#xA;VERSION:  apps/v1&#xA;&#xA;FIELD:    labels &amp;lt;map[string]string&amp;gt;&#xA;&#xA;DESCRIPTION:&#xA;     Map of string keys and values that can be used to organize and categorize&#xA;     (scope and select) objects. May match selectors of replication controllers&#xA;     and services. More info: http://kubernetes.io/docs/user-guide/labels&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Labels are attached to Kubernetes objects and are simple key: value pairs or maps(dictionary). &lt;br&gt;&lt;/li&gt;&#xA;&lt;li&gt;Labels are used to store identifying information about a thing that you might need to query against. &lt;br&gt;&lt;/li&gt;&#xA;&lt;li&gt;Labels are used for organization and selection of subsets of objects, and can be added to objects at creation time and/or modified at any time during cluster operations. &lt;br&gt;&lt;/li&gt;&#xA;&lt;li&gt;You will see them on pods, replication controllers, replica sets, services, and so on. &lt;br&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;c7022ba&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;“labels”: {&#xA;“tier”: “frontend”&#xA;env: prod&#xA;}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;selectors----maps-aka-dictionaries&#34;&gt;Selectors -  Maps (aka Dictionaries) &lt;a href=&#34;#selectors----maps-aka-dictionaries&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;&#xA;&lt;li&gt;Labels are queryable — which makes them especially useful in organizing things &lt;br&gt;&lt;/li&gt;&#xA;&lt;li&gt;A label selector is a string that identifies which labels you are trying to match &lt;br&gt;&lt;/li&gt;&#xA;&lt;li&gt;You will see them on pods, replication controllers, replica sets, services, and so on. &lt;br&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;6637c6c&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;tier = frontend&#xA;tier != frontend&#xA;environment in (production, qa)&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;annotations&#34;&gt;Annotations &lt;a href=&#34;#annotations&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;&#xA;&lt;li&gt;Annotations are bits of useful information you might want to store about a pod (or cluster, node, etc.) that you will not have to query against.&lt;/li&gt;&#xA;&lt;li&gt;They are also key/value pairs and have the same rules as labels.&lt;/li&gt;&#xA;&lt;li&gt;Examples of things you might put there are the pager contact, the build date, or a pointer to more information someplace else—like a URL.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;method-1-assign-labels-while-creating-a-new-object&#34;&gt;Method-1: Assign labels while creating a new object &lt;a href=&#34;#method-1-assign-labels-while-creating-a-new-object&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;50146dd&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;kubectl create deployment label-nginx-example --image=nginx --dry-run=client -oyaml &amp;gt; label-nginx-example.yml&#xA;# clean up the template and add a label app: prod&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;641d6d2&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜ k8s101 git:(main) ✗  cat label-nginx-example.yml&#xA;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  labels:&#xA;    app: prod&#xA;  name: label-nginx-example&#xA;spec:&#xA;  replicas: 2&#xA;  selector:&#xA;    matchLabels:&#xA;      app: prod&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: prod&#xA;    spec:&#xA;      containers:&#xA;      - image: nginx&#xA;        name: nginx&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;cc26f3b&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl create -f label-nginx-example.yml&#xA;deployment.apps/label-nginx-example created&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;632a357&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl get deployments --show-labels&#xA;&#xA;NAME                  READY   UP-TO-DATE   AVAILABLE   AGE   LABELS&#xA;label-nginx-example   1/1     1            1           23s   app=label-nginx-example&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;d35b8b1&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl get pods --show-labels&#xA;NAME                                  READY   STATUS    RESTARTS   AGE   LABELS&#xA;label-nginx-example-848d6df75-x8bb6   1/1     Running   0          45s   app=label-nginx-example,pod-template-hash=848d6df75&#xA;➜  k8s101 git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;assign-a-new-label-to-existing-pod-runtime-as-a-patch&#34;&gt;Assign a new label to existing pod runtime as a patch &lt;a href=&#34;#assign-a-new-label-to-existing-pod-runtime-as-a-patch&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;will assign new label &amp;ldquo;tier: frontend&amp;rdquo; to our existing Pods from the deployment label-nginx-example&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create POD with Command and Arguments </title>
      <link>//localhost:1313/docs/kubernetes/create-pod-with-command-and-arguments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/create-pod-with-command-and-arguments/</guid>
      <description>&lt;h4 id=&#34;kubectl-explain-podsspeccontainerscommand&#34;&gt;kubectl explain pods.spec.containers.command &lt;a href=&#34;#kubectl-explain-podsspeccontainerscommand&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;558b9b3&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;k8s101 git:(main) ✗ kubectl explain pods.spec.containers.command  &#xA;KIND:     Pod&#xA;VERSION:  v1&#xA;&#xA;FIELD:    command &amp;lt;[]string&amp;gt;&#xA;&#xA;DESCRIPTION:&#xA;     Entrypoint array. Not executed within a shell. The container image&amp;#39;s&#xA;     ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME)&#xA;     are expanded using the container&amp;#39;s environment. If a variable cannot be&#xA;     resolved, the reference in the input string will be unchanged. Double $$&#xA;     are reduced to a single $, which allows for escaping the $(VAR_NAME)&#xA;     syntax: i.e. &amp;#34;$$(VAR_NAME)&amp;#34; will produce the string literal &amp;#34;$(VAR_NAME)&amp;#34;.&#xA;     Escaped references will never be expanded, regardless of whether the&#xA;     variable exists or not. Cannot be updated. More info:&#xA;     https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell&#xA;➜  k8s101 git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;create-pod-without-any-commands-or-arguments&#34;&gt;Create POD without any commands or arguments. &lt;a href=&#34;#create-pod-without-any-commands-or-arguments&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;args in Kubernetes overrides CMD in the original docker image.&#xA;command in Kubernetes overrides ENTRYPOINT in the original docker image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multi-Container Pods</title>
      <link>//localhost:1313/docs/kubernetes/multi-container-pods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/multi-container-pods/</guid>
      <description>&lt;h5 id=&#34;why-does-kubernetes-allow-more-than-one-container-in-a-pod&#34;&gt;Why does Kubernetes allow more than one container in a Pod &lt;a href=&#34;#why-does-kubernetes-allow-more-than-one-container-in-a-pod&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h5&gt;&lt;ul&gt;&#xA;&lt;li&gt;Containers in a Pod runs on a &amp;ldquo;logical host&amp;rdquo;: they use the same network namespace (same IP address and port space), they can use shared volumes&lt;/li&gt;&#xA;&lt;li&gt;using several containers for an application is simpler to use, more transparent, and allows decoupling software dependencies&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;use-cases-for-multi-container-pods&#34;&gt;Use Cases for Multi-Container Pods &lt;a href=&#34;#use-cases-for-multi-container-pods&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;The primary purpose of a multi-container Pod is to support co-located, co-managed helper processes for a main program&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deployments and replication</title>
      <link>//localhost:1313/docs/kubernetes/deployments-and-replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/deployments-and-replication/</guid>
      <description>&lt;h4 id=&#34;kubectl-explain-deployment&#34;&gt;Kubectl explain Deployment &lt;a href=&#34;#kubectl-explain-deployment&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;b91f7ae&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;k8sworkshop git:(main) ✗ kubectl explain deployments&#xA;KIND:     Deployment&#xA;VERSION:  apps/v1&#xA;&#xA;DESCRIPTION:&#xA;     Deployment enables declarative updates for Pods and ReplicaSets.&#xA;&#xA;FIELDS:&#xA;   apiVersion   &amp;lt;string&amp;gt;&#xA;     APIVersion defines the versioned schema of this representation of an&#xA;     object. Servers should convert recognized schemas to the latest internal&#xA;     value, and may reject unrecognized values. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#xA;&#xA;   kind &amp;lt;string&amp;gt;&#xA;     Kind is a string value representing the REST resource this object&#xA;     represents. Servers may infer this from the endpoint the client submits&#xA;     requests to. Cannot be updated. In CamelCase. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#xA;&#xA;   metadata     &amp;lt;Object&amp;gt;&#xA;     Standard object&amp;#39;s metadata. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&#xA;&#xA;   spec &amp;lt;Object&amp;gt;&#xA;     Specification of the desired behavior of the Deployment.&#xA;&#xA;   status       &amp;lt;Object&amp;gt;&#xA;     Most recently observed status of the Deployment.&#xA;&#xA;➜  k8sworkshop git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;kubectl-explain-replicaset&#34;&gt;Kubectl explain Replicaset &lt;a href=&#34;#kubectl-explain-replicaset&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;444646b&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8sworkshop git:(main) ✗ kubectl explain rs&#xA;KIND:     ReplicaSet&#xA;VERSION:  apps/v1&#xA;&#xA;DESCRIPTION:&#xA;     ReplicaSet ensures that a specified number of pod replicas are running at&#xA;     any given time.&#xA;&#xA;FIELDS:&#xA;   apiVersion   &amp;lt;string&amp;gt;&#xA;     APIVersion defines the versioned schema of this representation of an&#xA;     object. Servers should convert recognized schemas to the latest internal&#xA;     value, and may reject unrecognized values. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#xA;&#xA;   kind &amp;lt;string&amp;gt;&#xA;     Kind is a string value representing the REST resource this object&#xA;     represents. Servers may infer this from the endpoint the client submits&#xA;     requests to. Cannot be updated. In CamelCase. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#xA;&#xA;   metadata     &amp;lt;Object&amp;gt;&#xA;     If the Labels of a ReplicaSet are empty, they are defaulted to be the same&#xA;     as the Pod(s) that the ReplicaSet manages. Standard object&amp;#39;s metadata. More&#xA;     info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&#xA;&#xA;   spec &amp;lt;Object&amp;gt;&#xA;     Spec defines the specification of the desired behavior of the ReplicaSet.&#xA;     More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status&#xA;&#xA;   status       &amp;lt;Object&amp;gt;&#xA;     Status is the most recently observed status of the ReplicaSet. This data&#xA;     may be out of date by some window of time. Populated by the system.&#xA;     Read-only. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status&#xA;&#xA;➜  k8sworkshop git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;overview-on-kubernetes-deployment&#34;&gt;Overview on Kubernetes Deployment &lt;a href=&#34;#overview-on-kubernetes-deployment&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Kubernetes also provides Deployment resource that sits on top of ReplicaSets and enables declarative application updates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RBAC</title>
      <link>//localhost:1313/docs/kubernetes/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/rbac/</guid>
      <description>&lt;h3 id=&#34;steps-to-set-up-x509-certificate-authentication&#34;&gt;Steps to Set Up X509 Certificate Authentication &lt;a href=&#34;#steps-to-set-up-x509-certificate-authentication&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;7f1d742&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;mkdir newusercrt&#xA;cd newusercrt &#xA;openssl genrsa --out sangam.key 2048&#xA;openssl req -new -key sangam.key -out sangam.csr -subj &amp;#34;/CN=sangam/O=group1&amp;#34;&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;This creates a private key (sangam.key) and a CSR (sangam.csr). The CN (Common Name) is set to the user&amp;rsquo;s name, and O (Organization) is an optional field to specify a group.&lt;/p&gt;&#xA;&lt;h3 id=&#34;create-a-certificatesigningrequest-in-kubernetes&#34;&gt;Create a CertificateSigningRequest in Kubernetes &lt;a href=&#34;#create-a-certificatesigningrequest-in-kubernetes&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Encode the CSR in base64 and create a YAML file for the Kubernetes CSR object:&lt;/p&gt;</description>
    </item>
    <item>
      <title>ConfigMap </title>
      <link>//localhost:1313/docs/kubernetes/configmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/configmap/</guid>
      <description>&lt;h4 id=&#34;craete-index-html-configmapyaml-with-following-content&#34;&gt;craete index-html-configmap.yaml with following content &lt;a href=&#34;#craete-index-html-configmapyaml-with-following-content&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;25a37df&#34; class=&#34;language-yaml &#34;&gt;&#xA;  &lt;code&gt;apiVersion: v1&#xA;kind: ConfigMap&#xA;metadata:&#xA;  name: index-html-configmap&#xA;  namespace: default&#xA;data:&#xA;  index.html: |&#xA;    &amp;lt;html&amp;gt;&#xA;    &amp;lt;h1&amp;gt;Welcome&amp;lt;/h1&amp;gt;&#xA;    &amp;lt;/br&amp;gt;&#xA;    &amp;lt;h1&amp;gt;Hi! This is a configmap Index file &amp;lt;/h1&amp;gt;&#xA;    &amp;lt;/html&amp;gt;&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;ef98f1a&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl apply -f index-html-configmap.yaml&#xA;configmap/index-html-configmap created&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;craete-nginxyaml-with-following-content&#34;&gt;craete nginx.yaml with following content &lt;a href=&#34;#craete-nginxyaml-with-following-content&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;e72d137&#34; class=&#34;language-yaml &#34;&gt;&#xA;  &lt;code&gt;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: nginx-deployment&#xA;  namespace: default&#xA;spec:&#xA;  selector:&#xA;    matchLabels:&#xA;      app: nginx&#xA;  replicas: 2 &#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: nginx&#xA;    spec:&#xA;      containers:&#xA;      - name: nginx&#xA;        image: nginx:latest&#xA;        ports:&#xA;        - containerPort: 80&#xA;        volumeMounts:&#xA;            - name: nginx-index-file&#xA;              mountPath: /usr/share/nginx/html/&#xA;      volumes:&#xA;      - name: nginx-index-file&#xA;        configMap:&#xA;          name: index-html-configmap&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;dc530e4&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl apply -f ngnix.yaml &#xA;deployment.apps/nginx-deployment created&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;craete-nginx-serviceyaml-with-following-content&#34;&gt;craete nginx-service.yaml with following content &lt;a href=&#34;#craete-nginx-serviceyaml-with-following-content&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;4509928&#34; class=&#34;language-yaml &#34;&gt;&#xA;  &lt;code&gt;&#xA;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: nginx-service&#xA;  namespace: default&#xA;spec:&#xA;  selector:&#xA;    app: nginx&#xA;  type: NodePort&#xA;  ports:&#xA;  - port: 80&#xA;    nodePort: 32000&#xA;    targetPort: 80&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;e0dac33&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl apply -f nginx-service.yaml&#xA;service/nginx-service created&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;a0d6c1f&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl get svc&#xA;NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE&#xA;kubernetes      ClusterIP   10.96.0.1        &amp;lt;none&amp;gt;        443/TCP          14h&#xA;nginx-service   NodePort    10.105.136.166   &amp;lt;none&amp;gt;        80:32000/TCP     49s&#xA;web             NodePort    10.100.132.142   &amp;lt;none&amp;gt;        8080:30646/TCP   123m&#xA;web2            NodePort    10.98.210.102    &amp;lt;none&amp;gt;        8080:31990/TCP   61m&#xA;➜  k8s101 git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;f27e056&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ minikube service nginx-service&#xA;|-----------|---------------|-------------|---------------------------|&#xA;| NAMESPACE |     NAME      | TARGET PORT |            URL            |&#xA;|-----------|---------------|-------------|---------------------------|&#xA;| default   | nginx-service |          80 | http://192.168.49.2:32000 |&#xA;|-----------|---------------|-------------|---------------------------|&#xA;🏃  Starting tunnel for service nginx-service.&#xA;|-----------|---------------|-------------|------------------------|&#xA;| NAMESPACE |     NAME      | TARGET PORT |          URL           |&#xA;|-----------|---------------|-------------|------------------------|&#xA;| default   | nginx-service |             | http://127.0.0.1:53149 |&#xA;|-----------|---------------|-------------|------------------------|&#xA;🎉  Opening service default/nginx-service in default browser...&#xA;❗  Because you are using a Docker driver on darwin, the terminal needs to be open to run it.&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;you-will-see-output-in-browser&#34;&gt;you will see output in browser &lt;a href=&#34;#you-will-see-output-in-browser&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;cdabbdf&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;Welcome&#xA;&#xA;&#xA;Hi! This is a configmap Index file&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;</description>
    </item>
    <item>
      <title>Kubernetes Service  </title>
      <link>//localhost:1313/docs/kubernetes/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/services/</guid>
      <description>&lt;h4 id=&#34;kubectl-explain-svc&#34;&gt;kubectl explain svc &lt;a href=&#34;#kubectl-explain-svc&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;1ff6b36&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl explain svc&#xA;KIND:     Service&#xA;VERSION:  v1&#xA;&#xA;DESCRIPTION:&#xA;     Service is a named abstraction of software service (for example, mysql)&#xA;     consisting of local port (for example 3306) that the proxy listens on, and&#xA;     the selector that determines which pods will answer requests sent through&#xA;     the proxy.&#xA;&#xA;FIELDS:&#xA;   apiVersion   &amp;lt;string&amp;gt;&#xA;     APIVersion defines the versioned schema of this representation of an&#xA;     object. Servers should convert recognized schemas to the latest internal&#xA;     value, and may reject unrecognized values. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#xA;&#xA;   kind &amp;lt;string&amp;gt;&#xA;     Kind is a string value representing the REST resource this object&#xA;     represents. Servers may infer this from the endpoint the client submits&#xA;     requests to. Cannot be updated. In CamelCase. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#xA;&#xA;   metadata     &amp;lt;Object&amp;gt;&#xA;     Standard object&amp;#39;s metadata. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&#xA;&#xA;   spec &amp;lt;Object&amp;gt;&#xA;     Spec defines the behavior of a service.&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status&#xA;&#xA;   status       &amp;lt;Object&amp;gt;&#xA;     Most recently observed status of the service. Populated by the system.&#xA;     Read-only. More info:&#xA;     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;create-kubernetes-service&#34;&gt;Create Kubernetes Service &lt;a href=&#34;#create-kubernetes-service&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A Kubernetes Service is an object you create to provide a single, stable access point to a set of pods that provide the same service. &lt;br&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Service Type - NodePort,ClusterIP,LoadBalancer </title>
      <link>//localhost:1313/docs/kubernetes/service-type-nodeportclusteriploadbalancer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/service-type-nodeportclusteriploadbalancer/</guid>
      <description>&lt;h4 id=&#34;service-type1-nodeport&#34;&gt;Service Type1: NodePort &lt;a href=&#34;#service-type1-nodeport&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;NodePort service helps expose the Service on each Node’s IP at a static port (the NodePort). NodePort The port is available to all the workers in the cluster. A ClusterIP Service, to which the NodePort Service routes are automatically created. One would be able to contact the NodePort Service, from outside the cluster, by requesting &lt;NodeIP&gt;:&lt;NodePort&gt;.&#xA;The port on the POD is called the targetPort and the one connecting the NodePort service to the POD is called port.&#xA;All this means if any request coming into port 30080 to the cluster on any worker node will be forwarded to the “Node Port Service,” which in turn will forward the request to the underlying Pod at port 80.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NetworkPolicy </title>
      <link>//localhost:1313/docs/kubernetes/networkpolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/networkpolicy/</guid>
      <description>&lt;p&gt;Creating effective Kubernetes Network Policies involves defining rules that explicitly allow or deny traffic to and from your pods. Here are some example policies to help you understand how to set up both restrictive (deny) and permissive (allow) behaviors in your cluster.&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-default-deny-all-traffic-to-a-namespace&#34;&gt;1. Default Deny All Traffic to a Namespace &lt;a href=&#34;#1-default-deny-all-traffic-to-a-namespace&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A common starting point in securing a namespace in Kubernetes is to deny all traffic to all pods within a namespace. This &amp;ldquo;default deny&amp;rdquo; policy doesn&amp;rsquo;t specify any &lt;code&gt;allow&lt;/code&gt; rules, making it effectively a deny-all policy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Core DNS</title>
      <link>//localhost:1313/docs/kubernetes/use-core-dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/use-core-dns/</guid>
      <description>&lt;p&gt;sangam@sangam:&lt;del&gt;$ kubectl create service clusterip my-service &amp;ndash;tcp=8080:8080&#xA;service/my-service created&#xA;sangam@sangam:&lt;/del&gt;$ kubectl get service&#xA;NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE&#xA;kubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP    45h&#xA;my-service   ClusterIP   10.106.213.25   &lt;none&gt;        8080/TCP   5s&#xA;sangam@sangam:~$ kubectl run busybox &amp;ndash;image=busybox -it &amp;ndash; /bin/sh&#xA;If you don&amp;rsquo;t see a command prompt, try pressing enter.&#xA;/ #&#xA;/ #&#xA;/ # nslookup 10.106.213.25&#xA;Server:&#x9;&#x9;10.96.0.10&#xA;Address:&#x9;10.96.0.10:53&lt;/p&gt;&#xA;&lt;p&gt;25.213.106.10.in-addr.arpa&#x9;name = my-service.default.svc.cluster.local&lt;/p&gt;&#xA;&lt;p&gt;/ # exit&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ingress Controller</title>
      <link>//localhost:1313/docs/kubernetes/ingress-controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/ingress-controller/</guid>
      <description>&lt;h4 id=&#34;enable-ingress-addon&#34;&gt;enable ingress addon &lt;a href=&#34;#enable-ingress-addon&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;8dcefb4&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;k8s101 git:(main) ✗ minikube addons enable ingress&#xA;💡  ingress is an addon maintained by Kubernetes. For any concerns contact minikube on GitHub.&#xA;You can view the list of minikube maintainers at: https://github.com/kubernetes/minikube/blob/master/OWNERS&#xA;💡  After the addon is enabled, please run &amp;#34;minikube tunnel&amp;#34; and your ingress resources would be available at &amp;#34;127.0.0.1&amp;#34;&#xA;    ▪ Using image k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1&#xA;    ▪ Using image k8s.gcr.io/ingress-nginx/controller:v1.2.1&#xA;    ▪ Using image k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1&#xA;🔎  Verifying ingress addon...&#xA;🌟  The &amp;#39;ingress&amp;#39; addon is enabled&#xA;➜  k8s101 git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;verify-ngnix-controller-running&#34;&gt;verify ngnix controller running &lt;a href=&#34;#verify-ngnix-controller-running&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;5adf1c5&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl get pods -n ingress-nginx&#xA;NAME                                        READY   STATUS      RESTARTS   AGE&#xA;ingress-nginx-admission-create-fxzbs        0/1     Completed   0          4m7s&#xA;ingress-nginx-admission-patch-jw98n         0/1     Completed   1          4m7s&#xA;ingress-nginx-controller-5959f988fd-tv8x8   1/1     Running     0          4m7s&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;verify-all-pods-running&#34;&gt;verify all pods running &lt;a href=&#34;#verify-all-pods-running&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;48f21e8&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl get pods -n kube-system&#xA;NAME                               READY   STATUS    RESTARTS      AGE&#xA;coredns-565d847f94-bl9qz           1/1     Running   0             12h&#xA;etcd-minikube                      1/1     Running   0             12h&#xA;kube-apiserver-minikube            1/1     Running   0             12h&#xA;kube-controller-manager-minikube   1/1     Running   0             12h&#xA;kube-proxy-qj7s7                   1/1     Running   0             12h&#xA;kube-scheduler-minikube            1/1     Running   0             12h&#xA;storage-provisioner                1/1     Running   2 (12h ago)   12h&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;deploy-hello-world-app&#34;&gt;Deploy Hello World App &lt;a href=&#34;#deploy-hello-world-app&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;5d2afed&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;&#xA;➜  k8s101 git:(main) ✗ kubectl create deployment web --image=gcr.io/google-samples/hello-app:1.0&#xA;deployment.apps/web created&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;903924b&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl expose deployment web --type=NodePort --port=8080&#xA;service/web exposed&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;d4f09b4&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ kubectl get service web      &#xA;NAME   TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE&#xA;web    NodePort   10.100.132.142   &amp;lt;none&amp;gt;        8080:30646/TCP   41s&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;3d9823f&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8s101 git:(main) ✗ minikube service web --url&#xA;http://127.0.0.1:51575&#xA;❗  Because you are using a Docker driver on darwin, the terminal needs to be open to run it.&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;output&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pre-requisit for this lab</title>
      <link>//localhost:1313/docs/kubernetes/pre-requisit-for-this-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/kubernetes/pre-requisit-for-this-lab/</guid>
      <description>&lt;h3 id=&#34;install-minikube&#34;&gt;Install Minikube &lt;a href=&#34;#install-minikube&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;964fd05&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;https://minikube.sigs.k8s.io/docs/start/&#xA;// i&amp;#39;m using mac so my installation step will be diffeent from you folks &#xA;&#xA;curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64&#xA;sudo install minikube-darwin-amd64 /usr/local/bin/minikube&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;ceate-cluster-using-minikube&#34;&gt;ceate cluster using minikube &lt;a href=&#34;#ceate-cluster-using-minikube&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;d364ead&#34; class=&#34;language-sh &#34;&gt;&#xA;  &lt;code&gt;➜  k8sworkshop git:(main) ✗ minikube start    &#xA;😄  minikube v1.28.0 on Darwin 13.2.1 (arm64)&#xA;✨  Using the docker driver based on existing profile&#xA;👍  Starting control plane node minikube in cluster minikube&#xA;🚜  Pulling base image ...&#xA;🔄  Restarting existing docker container for &amp;#34;minikube&amp;#34; ...&#xA;🐳  Preparing Kubernetes v1.25.3 on Docker 20.10.20 ...&#xA;🔎  Verifying Kubernetes components...&#xA;    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5&#xA;🌟  Enabled addons: storage-provisioner, default-storageclass&#xA;🏄  Done! kubectl is now configured to use &amp;#34;minikube&amp;#34; cluster and &amp;#34;default&amp;#34; namespace by default&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;check-it-out-cluster-information&#34;&gt;check it out cluster information &lt;a href=&#34;#check-it-out-cluster-information&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;aac16cc&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;&#xA;➜  k8sworkshop git:(main) ✗ kubectl cluster-info                                                                                   &#xA;Kubernetes control plane is running at https://127.0.0.1:51289&#xA;CoreDNS is running at https://127.0.0.1:51289/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy&#xA;&#xA;To further debug and diagnose cluster problems, use &amp;#39;kubectl cluster-info dump&amp;#39;.&#xA;➜  k8sworkshop git:(main) ✗ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;some-basic-commands-to-understand-minikube&#34;&gt;some basic commands to understand minikube &lt;a href=&#34;#some-basic-commands-to-understand-minikube&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;9262967&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube start&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;access-the-kubernetes-dashboard-running-within-the-minikube-cluster&#34;&gt;Access the Kubernetes dashboard running within the minikube cluster: &lt;a href=&#34;#access-the-kubernetes-dashboard-running-within-the-minikube-cluster&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;81670e9&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube dashboard&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;once-started-you-can-interact-with-your-cluster-using-kubectl-just-like-any-other-kubernetes-cluster-for-instance-starting-a-server&#34;&gt;Once started, you can interact with your cluster using &lt;code&gt;kubectl&lt;/code&gt;, just like any other Kubernetes cluster. For instance, starting a server: &lt;a href=&#34;#once-started-you-can-interact-with-your-cluster-using-kubectl-just-like-any-other-kubernetes-cluster-for-instance-starting-a-server&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;40f0807&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;kubectl create deployment hello-minikube --image=kicbase/echo-server:1.0&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;exposing-a-service-as-a-nodeport&#34;&gt;Exposing a service as a NodePort &lt;a href=&#34;#exposing-a-service-as-a-nodeport&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;dfee3d3&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;kubectl expose deployment hello-minikube --type=NodePort --port=8080&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;minikube-makes-it-easy-to-open-this-exposed-endpoint-in-your-browser&#34;&gt;minikube makes it easy to open this exposed endpoint in your browser: &lt;a href=&#34;#minikube-makes-it-easy-to-open-this-exposed-endpoint-in-your-browser&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;ba8a7ba&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube service hello-minikube&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;upgrade-your-cluster&#34;&gt;Upgrade your cluster: &lt;a href=&#34;#upgrade-your-cluster&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;16078bc&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube start --kubernetes-version=latest&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;3e9c911&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube start -p cluster2&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;stop-your-local-cluster&#34;&gt;Stop your local cluster: &lt;a href=&#34;#stop-your-local-cluster&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;b990e60&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube stop&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;delete-your-local-cluster&#34;&gt;Delete your local cluster: &lt;a href=&#34;#delete-your-local-cluster&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;871749d&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube delete&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;delete-all-local-clusters-and-profiles&#34;&gt;Delete all local clusters and profiles &lt;a href=&#34;#delete-all-local-clusters-and-profiles&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;03f6b78&#34; class=&#34;language-shell &#34;&gt;&#xA;  &lt;code&gt;minikube delete --all&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;</description>
    </item>
  </channel>
</rss>
