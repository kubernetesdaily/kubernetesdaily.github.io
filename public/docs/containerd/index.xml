<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn ContainerD on KubeDaily</title>
    <link>//localhost:1313/docs/containerd/</link>
    <description>Recent content in Learn ContainerD on KubeDaily</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 18 Jan 2025 03:06:52 +0530</lastBuildDate>
    <atom:link href="//localhost:1313/docs/containerd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>History of ContainerD</title>
      <link>//localhost:1313/docs/containerd/history-of-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/history-of-containerd/</guid>
      <description>&lt;h3 id=&#34;history-of-containerd&#34;&gt;History of ContainerD &lt;a href=&#34;#history-of-containerd&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Origin from Docker:&lt;/strong&gt; The origins of containerd can be traced back to Docker, the popular container platform. Docker initially included all components required to run a container in a single monolithic binary, which included the container runtime. As Docker grew, there was a need to break down this monolithic structure into more manageable, modular components.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Announcement and Spin-Off (2016):&lt;/strong&gt; Docker announced containerd in December 2016 as a core component split off from the Docker Engine. This move was part of Docker&amp;rsquo;s effort to modularize its platform. containerd was designed to manage the entire container lifecycle, including image transfer and storage, container execution and supervision, low-level storage, and network attachments.&#xA;Donation to CNCF (2017): In March 2017, Docker donated containerd to the Cloud Native Computing Foundation (CNCF), the same foundation that hosts Kubernetes. This move was aimed at fostering an open, neutral, and community-driven base for container operations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Architecture of containerd</title>
      <link>//localhost:1313/docs/containerd/architecture-of-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/architecture-of-containerd/</guid>
      <description>&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;  &#xA;&#xA;&#xA;&#xA;  &#xA;    &#xA;      &lt;img src=&#34;//localhost:1313/architecture_7418622855925254303.png&#34; alt=&#34;&#34; width=&#34;1782&#34; height=&#34;1080&#34; loading=&#34;lazy&#34;&gt;&#xA;    &#xA;  &#xA;&lt;/p&gt;&#xA;&lt;p&gt;This diagram represents the architecture of containerd, an industry-standard core container runtime. It is designed to be less opinionated and can be used as a base for building a more complex container platform. Let&amp;rsquo;s break down the architecture depicted in the image:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Ecosystem Layer&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The topmost layer is the ecosystem that interacts with containerd. It includes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Platforms: Cloud platforms and container orchestration systems that use containerd as their runtime, such as Google Cloud Platform, Docker, IBM Cloud, Microsoft Azure, Alibaba Cloud, AWS, and others.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to Runc</title>
      <link>//localhost:1313/docs/containerd/introduction-to-runc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/introduction-to-runc/</guid>
      <description>&lt;h4 id=&#34;install-ruc&#34;&gt;install ruc &lt;a href=&#34;#install-ruc&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;249d122&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sangam@sangam:~$ sudo apt-get -y install runc &#xA;Reading package lists... Done&#xA;Building dependency tree... Done&#xA;Reading state information... Done&#xA;runc is already the newest version (1.1.7-0ubuntu1~22.04.2).&#xA;0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.&#xA;&#xA;&#xA;sangam@sangam:~$ runc &#xA;NAME:&#xA;   runc - Open Container Initiative runtime&#xA;&#xA;runc is a command line client for running applications packaged according to&#xA;the Open Container Initiative (OCI) format and is a compliant implementation of the&#xA;Open Container Initiative specification.&#xA;&#xA;runc integrates well with existing process supervisors to provide a production&#xA;container runtime environment for applications. It can be used with your&#xA;existing process monitoring tools and the container will be spawned as a&#xA;direct child of the process supervisor.&#xA;&#xA;Containers are configured using bundles. A bundle for a container is a directory&#xA;that includes a specification file named &amp;#34;config.json&amp;#34; and a root filesystem.&#xA;The root filesystem contains the contents of the container.&#xA;&#xA;To start a new instance of a container:&#xA;&#xA;    # runc run [ -b bundle ] &amp;lt;container-id&amp;gt;&#xA;&#xA;Where &amp;#34;&amp;lt;container-id&amp;gt;&amp;#34; is your name for the instance of the container that you&#xA;are starting. The name you provide for the container instance must be unique on&#xA;your host. Providing the bundle directory using &amp;#34;-b&amp;#34; is optional. The default&#xA;value for &amp;#34;bundle&amp;#34; is the current directory.&#xA;&#xA;USAGE:&#xA;   runc [global options] command [command options] [arguments...]&#xA;&#xA;VERSION:&#xA;   1.1.7-0ubuntu1~22.04.2&#xA;spec: 1.0.2-dev&#xA;go: go1.18.1&#xA;libseccomp: 2.5.3&#xA;&#xA;COMMANDS:&#xA;   checkpoint  checkpoint a running container&#xA;   create      create a container&#xA;   delete      delete any resources held by the container often used with detached container&#xA;   events      display container events such as OOM notifications, cpu, memory, and IO usage statistics&#xA;   exec        execute new process inside the container&#xA;   kill        kill sends the specified signal (default: SIGTERM) to the container&amp;#39;s init process&#xA;   list        lists containers started by runc with the given root&#xA;   pause       pause suspends all processes inside the container&#xA;   ps          ps displays the processes running inside a container&#xA;   restore     restore a container from a previous checkpoint&#xA;   resume      resumes all processes that have been previously paused&#xA;   run         create and run a container&#xA;   spec        create a new specification file&#xA;   start       executes the user defined process in a created container&#xA;   state       output the state of a container&#xA;   update      update container resource constraints&#xA;   features    show the enabled features&#xA;   help, h     Shows a list of commands or help for one command&#xA;&#xA;GLOBAL OPTIONS:&#xA;   --debug             enable debug logging&#xA;   --log value         set the log file to write runc logs to (default is &amp;#39;/dev/stderr&amp;#39;)&#xA;   --log-format value  set the log format (&amp;#39;text&amp;#39; (default), or &amp;#39;json&amp;#39;) (default: &amp;#34;text&amp;#34;)&#xA;   --root value        root directory for storage of container state (this should be located in tmpfs) (default: &amp;#34;/run/user/1000/runc&amp;#34;)&#xA;   --criu value        path to the criu binary used for checkpoint and restore (default: &amp;#34;criu&amp;#34;)&#xA;   --systemd-cgroup    enable systemd cgroup support, expects cgroupsPath to be of form &amp;#34;slice:prefix:name&amp;#34; for e.g. &amp;#34;system.slice:runc:434234&amp;#34;&#xA;   --rootless value    ignore cgroup permission errors (&amp;#39;true&amp;#39;, &amp;#39;false&amp;#39;, or &amp;#39;auto&amp;#39;) (default: &amp;#34;auto&amp;#34;)&#xA;   --help, -h          show help&#xA;   --version, -v       print the version&#xA;sangam@sangam:~$ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;create-directory&#34;&gt;create directory &lt;a href=&#34;#create-directory&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;0c5bf7f&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sangam@sangam:~$ mkdir runc-sangam-demo&#xA;sangam@sangam:~$ cd runc-sangam-demo/&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;once installed, you can start using runc:&lt;/p&gt;</description>
    </item>
    <item>
      <title> ContainerD CLI ctr </title>
      <link>//localhost:1313/docs/containerd/containerd-ctr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/containerd-ctr/</guid>
      <description>&lt;h4 id=&#34;update-ubuntu-server&#34;&gt;update ubuntu server &lt;a href=&#34;#update-ubuntu-server&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;3bb8bc1&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo apt-get update&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;install-the-necessary-packages&#34;&gt;Install the necessary packages &lt;a href=&#34;#install-the-necessary-packages&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;bb84c2f&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo apt-get install apt-transport-https ca-certificates curl software-properties-common&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;install-docker&#34;&gt;install docker &lt;a href=&#34;#install-docker&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;9044381&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt; curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;install-containerd&#34;&gt;Install Containerd &lt;a href=&#34;#install-containerd&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;ff801e3&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo apt-get install containerd -y&#xA;Reading package lists... Done&#xA;Building dependency tree... Done&#xA;Reading state information... Done&#xA;containerd is already the newest version (1.7.2-0ubuntu1~22.04.1).&#xA;containerd set to manually installed.&#xA;0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;configure-containerd&#34;&gt;Configure ContainerD &lt;a href=&#34;#configure-containerd&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;ac873ab&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo mkdir -p /etc/containerd&#xA;sudo su -&#xA;containerd config default /etc/containerd/config.toml&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;8594488&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;containerd config default /etc/containerd/config.toml&#xA;disabled_plugins = []&#xA;imports = []&#xA;oom_score = 0&#xA;plugin_dir = &amp;#34;&amp;#34;&#xA;required_plugins = []&#xA;root = &amp;#34;/var/lib/containerd&amp;#34;&#xA;state = &amp;#34;/run/containerd&amp;#34;&#xA;temp = &amp;#34;&amp;#34;&#xA;version = 2&#xA;&#xA;[cgroup]&#xA;  path = &amp;#34;&amp;#34;&#xA;&#xA;[debug]&#xA;  address = &amp;#34;&amp;#34;&#xA;  format = &amp;#34;&amp;#34;&#xA;  gid = 0&#xA;  level = &amp;#34;&amp;#34;&#xA;  uid = 0&#xA;&#xA;[grpc]&#xA;  address = &amp;#34;/run/containerd/containerd.sock&amp;#34;&#xA;  gid = 0&#xA;  max_recv_message_size = 16777216&#xA;  max_send_message_size = 16777216&#xA;  tcp_address = &amp;#34;&amp;#34;&#xA;  tcp_tls_ca = &amp;#34;&amp;#34;&#xA;  tcp_tls_cert = &amp;#34;&amp;#34;&#xA;  tcp_tls_key = &amp;#34;&amp;#34;&#xA;  uid = 0&#xA;&#xA;[metrics]&#xA;  address = &amp;#34;&amp;#34;&#xA;  grpc_histogram = false&#xA;&#xA;[plugins]&#xA;&#xA;  [plugins.&amp;#34;io.containerd.gc.v1.scheduler&amp;#34;]&#xA;    deletion_threshold = 0&#xA;    mutation_threshold = 100&#xA;    pause_threshold = 0.02&#xA;    schedule_delay = &amp;#34;0s&amp;#34;&#xA;    startup_delay = &amp;#34;100ms&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;]&#xA;    cdi_spec_dirs = [&amp;#34;/etc/cdi&amp;#34;, &amp;#34;/var/run/cdi&amp;#34;]&#xA;    device_ownership_from_security_context = false&#xA;    disable_apparmor = false&#xA;    disable_cgroup = false&#xA;    disable_hugetlb_controller = true&#xA;    disable_proc_mount = false&#xA;    disable_tcp_service = true&#xA;    drain_exec_sync_io_timeout = &amp;#34;0s&amp;#34;&#xA;    enable_cdi = false&#xA;    enable_selinux = false&#xA;    enable_tls_streaming = false&#xA;    enable_unprivileged_icmp = false&#xA;    enable_unprivileged_ports = false&#xA;    ignore_image_defined_volumes = false&#xA;    image_pull_progress_timeout = &amp;#34;1m0s&amp;#34;&#xA;    max_concurrent_downloads = 3&#xA;    max_container_log_line_size = 16384&#xA;    netns_mounts_under_state_dir = false&#xA;    restrict_oom_score_adj = false&#xA;    sandbox_image = &amp;#34;registry.k8s.io/pause:3.8&amp;#34;&#xA;    selinux_category_range = 1024&#xA;    stats_collect_period = 10&#xA;    stream_idle_timeout = &amp;#34;4h0m0s&amp;#34;&#xA;    stream_server_address = &amp;#34;127.0.0.1&amp;#34;&#xA;    stream_server_port = &amp;#34;0&amp;#34;&#xA;    systemd_cgroup = false&#xA;    tolerate_missing_hugetlb_controller = true&#xA;    unset_seccomp_profile = &amp;#34;&amp;#34;&#xA;&#xA;    [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.cni]&#xA;      bin_dir = &amp;#34;/opt/cni/bin&amp;#34;&#xA;      conf_dir = &amp;#34;/etc/cni/net.d&amp;#34;&#xA;      conf_template = &amp;#34;&amp;#34;&#xA;      ip_pref = &amp;#34;&amp;#34;&#xA;      max_conf_num = 1&#xA;      setup_serially = false&#xA;&#xA;    [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd]&#xA;      default_runtime_name = &amp;#34;runc&amp;#34;&#xA;      disable_snapshot_annotations = true&#xA;      discard_unpacked_layers = false&#xA;      ignore_blockio_not_enabled_errors = false&#xA;      ignore_rdt_not_enabled_errors = false&#xA;      no_pivot = false&#xA;      snapshotter = &amp;#34;overlayfs&amp;#34;&#xA;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.default_runtime]&#xA;        base_runtime_spec = &amp;#34;&amp;#34;&#xA;        cni_conf_dir = &amp;#34;&amp;#34;&#xA;        cni_max_conf_num = 0&#xA;        container_annotations = []&#xA;        pod_annotations = []&#xA;        privileged_without_host_devices = false&#xA;        privileged_without_host_devices_all_devices_allowed = false&#xA;        runtime_engine = &amp;#34;&amp;#34;&#xA;        runtime_path = &amp;#34;&amp;#34;&#xA;        runtime_root = &amp;#34;&amp;#34;&#xA;        runtime_type = &amp;#34;&amp;#34;&#xA;        sandbox_mode = &amp;#34;&amp;#34;&#xA;        snapshotter = &amp;#34;&amp;#34;&#xA;&#xA;        [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.default_runtime.options]&#xA;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes]&#xA;&#xA;        [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes.runc]&#xA;          base_runtime_spec = &amp;#34;&amp;#34;&#xA;          cni_conf_dir = &amp;#34;&amp;#34;&#xA;          cni_max_conf_num = 0&#xA;          container_annotations = []&#xA;          pod_annotations = []&#xA;          privileged_without_host_devices = false&#xA;          privileged_without_host_devices_all_devices_allowed = false&#xA;          runtime_engine = &amp;#34;&amp;#34;&#xA;          runtime_path = &amp;#34;&amp;#34;&#xA;          runtime_root = &amp;#34;&amp;#34;&#xA;          runtime_type = &amp;#34;io.containerd.runc.v2&amp;#34;&#xA;          sandbox_mode = &amp;#34;podsandbox&amp;#34;&#xA;          snapshotter = &amp;#34;&amp;#34;&#xA;&#xA;          [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes.runc.options]&#xA;            BinaryName = &amp;#34;&amp;#34;&#xA;            CriuImagePath = &amp;#34;&amp;#34;&#xA;            CriuPath = &amp;#34;&amp;#34;&#xA;            CriuWorkPath = &amp;#34;&amp;#34;&#xA;            IoGid = 0&#xA;            IoUid = 0&#xA;            NoNewKeyring = false&#xA;            NoPivotRoot = false&#xA;            Root = &amp;#34;&amp;#34;&#xA;            ShimCgroup = &amp;#34;&amp;#34;&#xA;            SystemdCgroup = false&#xA;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.untrusted_workload_runtime]&#xA;        base_runtime_spec = &amp;#34;&amp;#34;&#xA;        cni_conf_dir = &amp;#34;&amp;#34;&#xA;        cni_max_conf_num = 0&#xA;        container_annotations = []&#xA;        pod_annotations = []&#xA;        privileged_without_host_devices = false&#xA;        privileged_without_host_devices_all_devices_allowed = false&#xA;        runtime_engine = &amp;#34;&amp;#34;&#xA;        runtime_path = &amp;#34;&amp;#34;&#xA;        runtime_root = &amp;#34;&amp;#34;&#xA;        runtime_type = &amp;#34;&amp;#34;&#xA;        sandbox_mode = &amp;#34;&amp;#34;&#xA;        snapshotter = &amp;#34;&amp;#34;&#xA;&#xA;        [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.untrusted_workload_runtime.options]&#xA;&#xA;    [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.image_decryption]&#xA;      key_model = &amp;#34;node&amp;#34;&#xA;&#xA;    [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry]&#xA;      config_path = &amp;#34;&amp;#34;&#xA;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry.auths]&#xA;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry.configs]&#xA;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry.headers]&#xA;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry.mirrors]&#xA;&#xA;    [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.x509_key_pair_streaming]&#xA;      tls_cert_file = &amp;#34;&amp;#34;&#xA;      tls_key_file = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.internal.v1.opt&amp;#34;]&#xA;    path = &amp;#34;/opt/containerd&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.internal.v1.restart&amp;#34;]&#xA;    interval = &amp;#34;10s&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.internal.v1.tracing&amp;#34;]&#xA;    sampling_ratio = 1.0&#xA;    service_name = &amp;#34;containerd&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.metadata.v1.bolt&amp;#34;]&#xA;    content_sharing_policy = &amp;#34;shared&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.monitor.v1.cgroups&amp;#34;]&#xA;    no_prometheus = false&#xA;&#xA;  [plugins.&amp;#34;io.containerd.nri.v1.nri&amp;#34;]&#xA;    disable = true&#xA;    disable_connections = false&#xA;    plugin_config_path = &amp;#34;/etc/nri/conf.d&amp;#34;&#xA;    plugin_path = &amp;#34;/opt/nri/plugins&amp;#34;&#xA;    plugin_registration_timeout = &amp;#34;5s&amp;#34;&#xA;    plugin_request_timeout = &amp;#34;2s&amp;#34;&#xA;    socket_path = &amp;#34;/var/run/nri/nri.sock&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.runtime.v1.linux&amp;#34;]&#xA;    no_shim = false&#xA;    runtime = &amp;#34;runc&amp;#34;&#xA;    runtime_root = &amp;#34;&amp;#34;&#xA;    shim = &amp;#34;containerd-shim&amp;#34;&#xA;    shim_debug = false&#xA;&#xA;  [plugins.&amp;#34;io.containerd.runtime.v2.task&amp;#34;]&#xA;    platforms = [&amp;#34;linux/arm64/v8&amp;#34;]&#xA;    sched_core = false&#xA;&#xA;  [plugins.&amp;#34;io.containerd.service.v1.diff-service&amp;#34;]&#xA;    default = [&amp;#34;walking&amp;#34;]&#xA;&#xA;  [plugins.&amp;#34;io.containerd.service.v1.tasks-service&amp;#34;]&#xA;    blockio_config_file = &amp;#34;&amp;#34;&#xA;    rdt_config_file = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.snapshotter.v1.aufs&amp;#34;]&#xA;    root_path = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.snapshotter.v1.btrfs&amp;#34;]&#xA;    root_path = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.snapshotter.v1.devmapper&amp;#34;]&#xA;    async_remove = false&#xA;    base_image_size = &amp;#34;&amp;#34;&#xA;    discard_blocks = false&#xA;    fs_options = &amp;#34;&amp;#34;&#xA;    fs_type = &amp;#34;&amp;#34;&#xA;    pool_name = &amp;#34;&amp;#34;&#xA;    root_path = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.snapshotter.v1.native&amp;#34;]&#xA;    root_path = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.snapshotter.v1.overlayfs&amp;#34;]&#xA;    root_path = &amp;#34;&amp;#34;&#xA;    upperdir_label = false&#xA;&#xA;  [plugins.&amp;#34;io.containerd.snapshotter.v1.zfs&amp;#34;]&#xA;    root_path = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.tracing.processor.v1.otlp&amp;#34;]&#xA;    endpoint = &amp;#34;&amp;#34;&#xA;    insecure = false&#xA;    protocol = &amp;#34;&amp;#34;&#xA;&#xA;  [plugins.&amp;#34;io.containerd.transfer.v1.local&amp;#34;]&#xA;    config_path = &amp;#34;&amp;#34;&#xA;    max_concurrent_downloads = 3&#xA;    max_concurrent_uploaded_layers = 3&#xA;&#xA;    [[plugins.&amp;#34;io.containerd.transfer.v1.local&amp;#34;.unpack_config]]&#xA;      differ = &amp;#34;&amp;#34;&#xA;      platform = &amp;#34;linux/arm64/v8&amp;#34;&#xA;      snapshotter = &amp;#34;overlayfs&amp;#34;&#xA;&#xA;[proxy_plugins]&#xA;&#xA;[stream_processors]&#xA;&#xA;  [stream_processors.&amp;#34;io.containerd.ocicrypt.decoder.v1.tar&amp;#34;]&#xA;    accepts = [&amp;#34;application/vnd.oci.image.layer.v1.tar&amp;#43;encrypted&amp;#34;]&#xA;    args = [&amp;#34;--decryption-keys-path&amp;#34;, &amp;#34;/etc/containerd/ocicrypt/keys&amp;#34;]&#xA;    env = [&amp;#34;OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf&amp;#34;]&#xA;    path = &amp;#34;ctd-decoder&amp;#34;&#xA;    returns = &amp;#34;application/vnd.oci.image.layer.v1.tar&amp;#34;&#xA;&#xA;  [stream_processors.&amp;#34;io.containerd.ocicrypt.decoder.v1.tar.gzip&amp;#34;]&#xA;    accepts = [&amp;#34;application/vnd.oci.image.layer.v1.tar&amp;#43;gzip&amp;#43;encrypted&amp;#34;]&#xA;    args = [&amp;#34;--decryption-keys-path&amp;#34;, &amp;#34;/etc/containerd/ocicrypt/keys&amp;#34;]&#xA;    env = [&amp;#34;OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf&amp;#34;]&#xA;    path = &amp;#34;ctd-decoder&amp;#34;&#xA;    returns = &amp;#34;application/vnd.oci.image.layer.v1.tar&amp;#43;gzip&amp;#34;&#xA;&#xA;[timeouts]&#xA;  &amp;#34;io.containerd.timeout.bolt.open&amp;#34; = &amp;#34;0s&amp;#34;&#xA;  &amp;#34;io.containerd.timeout.metrics.shimstats&amp;#34; = &amp;#34;2s&amp;#34;&#xA;  &amp;#34;io.containerd.timeout.shim.cleanup&amp;#34; = &amp;#34;5s&amp;#34;&#xA;  &amp;#34;io.containerd.timeout.shim.load&amp;#34; = &amp;#34;5s&amp;#34;&#xA;  &amp;#34;io.containerd.timeout.shim.shutdown&amp;#34; = &amp;#34;3s&amp;#34;&#xA;  &amp;#34;io.containerd.timeout.task.state&amp;#34; = &amp;#34;2s&amp;#34;&#xA;&#xA;[ttrpc]&#xA;  address = &amp;#34;&amp;#34;&#xA;  gid = 0&#xA;  uid = 0&#xA;sangam@sangam:~$ &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h1 id=&#34;containerd-configuration-overview&#34;&gt;ContainerD Configuration Overview &lt;a href=&#34;#containerd-configuration-overview&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents &lt;a href=&#34;#table-of-contents&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#general-configuration&#34;&gt;General Configuration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#cgroup&#34;&gt;CGroup&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#debug&#34;&gt;Debug&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#grpc&#34;&gt;GRPC&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#metrics&#34;&gt;Metrics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#plugins&#34;&gt;Plugins&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#proxy-plugins&#34;&gt;Proxy Plugins&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#stream-processors&#34;&gt;Stream Processors&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#timeouts&#34;&gt;Timeouts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;//localhost:1313/docs/containerd/containerd-ctr/#ttrpc&#34;&gt;TTRPC&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;general-configuration&#34;&gt;General Configuration &lt;a href=&#34;#general-configuration&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Key&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;disabled_plugins&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List of plugins to be disabled.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;required_plugins&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List of required plugins.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;imports&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List of imports from other configurations.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;oom_score&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Out-Of-Memory score for ContainerD processes.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;plugin_dir&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Directory for ContainerD plugins.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;root&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Directory for ContainerD&amp;rsquo;s persistent state.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;state&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Directory for ContainerD&amp;rsquo;s runtime state.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Configuration file format version.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;cgroup&#34;&gt;CGroup &lt;a href=&#34;#cgroup&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Key&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;path&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Custom path for cgroup.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;debug&#34;&gt;Debug &lt;a href=&#34;#debug&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Key&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;address&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Socket address for debug service.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;format&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Log format for debug service.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gid&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Group ID for debug service.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;level&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Debug level.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;uid&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;User ID for debug service.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;grpc&#34;&gt;GRPC &lt;a href=&#34;#grpc&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Key&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;address&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Socket address for GRPC communication.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;max_recv_message_size&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Maximum receive message size.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;max_send_message_size&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Maximum send message size.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;tcp_address&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;TCP address for GRPC.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;tcp_tls_*&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;TLS settings for TCP GRPC.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;User/Group ID for GRPC socket.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;metrics&#34;&gt;Metrics &lt;a href=&#34;#metrics&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Key&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;address&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Address for exporting metrics.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;grpc_histogram&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Enable GRPC histogram metrics.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;plugins&#34;&gt;Plugins &lt;a href=&#34;#plugins&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;This section is extensive and contains configurations for various ContainerD plugins. Only key plugins and configurations are listed here.&lt;/p&gt;</description>
    </item>
    <item>
      <title> Kata Containers </title>
      <link>//localhost:1313/docs/containerd/kata-container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/kata-container/</guid>
      <description>&lt;h3 id=&#34;kata-containers&#34;&gt;Kata Containers &lt;a href=&#34;#kata-containers&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;d0f6c09&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;$ bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/kata-containers/kata-containers/main/utils/kata-manager.sh)&amp;#34;&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;If your system already has containerd installed, to install Kata Containers and only configure containerd, run:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;67bc86a&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;$ bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/kata-containers/kata-containers/main/utils/kata-manager.sh) -o&amp;#34;&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;if you have not installed anything use this to get setup everything&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;578445d&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;$ bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/kata-containers/kata-containers/main/utils/kata-manager.sh) -h&amp;#34;&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;verify-installation&#34;&gt;verify installation &lt;a href=&#34;#verify-installation&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;674bcd2&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt; bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/kata-containers/kata-containers/main/utils/kata-manager.sh) -o&#xA;&amp;gt; &amp;#34;&#xA;INFO: Checking dependencies&#xA;INFO: Running pre-checks&#xA;INFO: Downloading Kata Containers release (latest version)&#xA;  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&#xA;                                 Dload  Upload   Total   Spent    Left  Speed&#xA;  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0&#xA;100  132M  100  132M    0     0  5000k      0  0:00:27  0:00:27 --:--:-- 4777k&#xA;INFO: Installing Kata Containers release 3.2.0 from /tmp/tmp.3iqScS54QS/kata-static-3.2.0-arm64.tar.xz&#xA;[sudo] password for sangam: &#xA;./&#xA;./opt/&#xA;./opt/kata/&#xA;./opt/kata/VERSION&#xA;./opt/kata/bin/&#xA;./opt/kata/bin/containerd-shim-kata-v2&#xA;./opt/kata/bin/firecracker&#xA;./opt/kata/bin/kata-monitor&#xA;./opt/kata/bin/jailer&#xA;./opt/kata/bin/qemu-system-aarch64&#xA;./opt/kata/bin/kata-collect-data.sh&#xA;./opt/kata/bin/kata-runtime&#xA;./opt/kata/bin/cloud-hypervisor&#xA;./opt/kata/libexec/&#xA;./opt/kata/libexec/nydusd&#xA;./opt/kata/libexec/virtiofsd&#xA;./opt/kata/versions.yaml&#xA;./opt/kata/share/&#xA;./opt/kata/share/kata-qemu/&#xA;./opt/kata/share/kata-qemu/qemu/&#xA;./opt/kata/share/kata-qemu/qemu/edk2-i386-code.fd&#xA;./opt/kata/share/kata-qemu/qemu/qboot.rom&#xA;./opt/kata/share/kata-qemu/qemu/hppa-firmware.img&#xA;./opt/kata/share/kata-qemu/qemu/s390-netboot.img&#xA;./opt/kata/share/kata-qemu/qemu/vof-nvram.bin&#xA;./opt/kata/share/kata-qemu/qemu/s390-ccw.img&#xA;./opt/kata/share/kata-qemu/qemu/bios.bin&#xA;./opt/kata/share/kata-qemu/qemu/edk2-arm-code.fd&#xA;./opt/kata/share/kata-qemu/qemu/edk2-x86_64-code.fd&#xA;./opt/kata/share/kata-qemu/qemu/bios-256k.bin&#xA;./opt/kata/share/kata-qemu/qemu/multiboot_dma.bin&#xA;./opt/kata/share/kata-qemu/qemu/vof.bin&#xA;./opt/kata/share/kata-qemu/qemu/qemu-nsis.bmp&#xA;./opt/kata/share/kata-qemu/qemu/bios-microvm.bin&#xA;./opt/kata/share/kata-qemu/qemu/linuxboot.bin&#xA;./opt/kata/share/kata-qemu/qemu/linuxboot_dma.bin&#xA;./opt/kata/share/kata-qemu/qemu/pvh.bin&#xA;./opt/kata/share/kata-qemu/qemu/firmware/&#xA;./opt/kata/share/kata-qemu/qemu/firmware/50-edk2-i386-secure.json&#xA;./opt/kata/share/kata-qemu/qemu/firmware/60-edk2-i386.json&#xA;./opt/kata/share/kata-qemu/qemu/firmware/60-edk2-aarch64.json&#xA;./opt/kata/share/kata-qemu/qemu/firmware/60-edk2-arm.json&#xA;./opt/kata/share/kata-qemu/qemu/firmware/50-edk2-x86_64-secure.json&#xA;./opt/kata/share/kata-qemu/qemu/firmware/60-edk2-x86_64.json&#xA;./opt/kata/share/kata-qemu/qemu/kvmvapic.bin&#xA;./opt/kata/share/kata-qemu/qemu/efi-virtio.rom&#xA;./opt/kata/share/kata-qemu/qemu/edk2-licenses.txt&#xA;./opt/kata/share/kata-qemu/qemu/edk2-i386-secure-code.fd&#xA;./opt/kata/share/kata-qemu/qemu/edk2-aarch64-code.fd&#xA;./opt/kata/share/kata-qemu/qemu/edk2-i386-vars.fd&#xA;./opt/kata/share/kata-qemu/qemu/edk2-x86_64-secure-code.fd&#xA;./opt/kata/share/kata-qemu/qemu/edk2-arm-vars.fd&#xA;./opt/kata/share/bash-completion/&#xA;./opt/kata/share/bash-completion/completions/&#xA;./opt/kata/share/bash-completion/completions/kata-runtime&#xA;./opt/kata/share/defaults/&#xA;./opt/kata/share/defaults/kata-containers/&#xA;./opt/kata/share/defaults/kata-containers/configuration-clh.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration-dragonball.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration-qemu-snp.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration-qemu-tdx.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration-qemu-sev.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration-qemu.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration-qemu-nvidia-gpu.toml&#xA;./opt/kata/share/defaults/kata-containers/configuration-fc.toml&#xA;./opt/kata/share/kata-containers/&#xA;./opt/kata/share/kata-containers/vmlinux-6.1.38-114&#xA;./opt/kata/share/kata-containers/vmlinuz-6.1.38-114&#xA;./opt/kata/share/kata-containers/vmlinuz-dragonball-experimental.container&#xA;./opt/kata/share/kata-containers/kata-containers.img&#xA;./opt/kata/share/kata-containers/kata-containers-initrd.img&#xA;./opt/kata/share/kata-containers/vmlinuz-5.10.25-114-dragonball-experimental&#xA;./opt/kata/share/kata-containers/config-6.1.38-114&#xA;./opt/kata/share/kata-containers/vmlinuz.container&#xA;./opt/kata/share/kata-containers/vmlinux.container&#xA;./opt/kata/share/kata-containers/vmlinux-dragonball-experimental.container&#xA;./opt/kata/share/kata-containers/vmlinux-5.10.25-114-dragonball-experimental&#xA;./opt/kata/share/kata-containers/kata-ubuntu-latest.image&#xA;./opt/kata/share/kata-containers/kata-alpine-3.15.initrd&#xA;./opt/kata/share/kata-containers/config-5.10.25-114-dragonball-experimental&#xA;./opt/kata/runtime-rs/&#xA;./opt/kata/runtime-rs/bin/&#xA;./opt/kata/runtime-rs/bin/containerd-shim-kata-v2&#xA;INFO: Kata Containers installed&#xA;&#xA;INFO: Using default Kata Containers configuration&#xA;kata-runtime  : 3.2.0&#xA;   commit   : 45687e3251604ccc71b595d37f14253c4584cd5f&#xA;   OCI specs: 1.0.2-dev&#xA;INFO: Testing Kata Containers&#xA;sangam@sangam:~$  kata-runtime --version&#xA;kata-runtime  : 3.2.0&#xA;   commit   : 45687e3251604ccc71b595d37f14253c4584cd5f&#xA;   OCI specs: 1.0.2-dev&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;pull-and-run-container-using-kata-shim&#34;&gt;pull and run container using kata shim &lt;a href=&#34;#pull-and-run-container-using-kata-shim&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;4fce1f7&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sangam@sangam:~$ image=&amp;#34;docker.io/library/busybox:latest&amp;#34;&#xA;sangam@sangam:~$ sudo ctr run --runtime &amp;#34;io.containerd.kata.v2&amp;#34; --rm -t &amp;#34;$image&amp;#34; test-kata uname -r&#xA;sangam@sangam:~$ sudo ctr container list&#xA;CONTAINER    IMAGE                               RUNTIME                  &#xA;test-kata    docker.io/library/busybox:latest    io.containerd.kata.v2    &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;you-can-manually-install-cni-plugins&#34;&gt;You can manually install CNI plugins &lt;a href=&#34;#you-can-manually-install-cni-plugins&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;7788abc&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;git clone https://github.com/containernetworking/plugins.git&#xA;&#xA;pushd plugins&#xA;&#xA;sudo apt install golang-go&#xA;&#xA;sangam@sangam:~/plugins$ ./build_linux.sh&#xA;Building plugins &#xA;  bandwidth&#xA;  firewall&#xA;  portmap&#xA;  sbr&#xA;  tuning&#xA;  vrf&#xA;  bridge&#xA;  dummy&#xA;  host-device&#xA;  ipvlan&#xA;  loopback&#xA;  macvlan&#xA;  ptp&#xA;  tap&#xA;  vlan&#xA;  dhcp&#xA;  host-local&#xA;  static&#xA;sangam@sangam:~/plugins$ sudo mkdir /opt/cni&#xA;sangam@sangam:~/plugins$ sudo cp -r bin /opt/cni/&#xA;sangam@sangam:~/plugins$ popd&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;define-net-conf&#34;&gt;define net conf &lt;a href=&#34;#define-net-conf&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;477c3a2&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo mkdir -p /etc/cni/net.d&#xA;&#xA;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/cni/net.d/10-mynet.conf&#xA;{&#xA;    &amp;#34;cniVersion&amp;#34;: &amp;#34;0.3.1&amp;#34;,&#xA;    &amp;#34;name&amp;#34;: &amp;#34;mynet&amp;#34;,&#xA;    &amp;#34;type&amp;#34;: &amp;#34;bridge&amp;#34;,&#xA;    &amp;#34;bridge&amp;#34;: &amp;#34;cni0&amp;#34;,&#xA;    &amp;#34;isGateway&amp;#34;: true,&#xA;    &amp;#34;ipMasq&amp;#34;: true,&#xA;    &amp;#34;ipam&amp;#34;: {&#xA;        &amp;#34;type&amp;#34;: &amp;#34;host-local&amp;#34;,&#xA;        &amp;#34;subnet&amp;#34;: &amp;#34;10.22.0.0/16&amp;#34;,&#xA;        &amp;#34;gateway&amp;#34;: &amp;#34;10.22.0.1&amp;#34;&#xA;    }&#xA;}&#xA;EOF&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;lets-run-your-aphine-image&#34;&gt;lets run your aphine image &lt;a href=&#34;#lets-run-your-aphine-image&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;17c35bc&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;&#xA;sangam@sangam:~$ sudo ctr image pull docker.io/library/busybox:latest&#xA;docker.io/library/alpine:latest:                                                  resolved       |&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;| &#xA;index-sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b:    done           |&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;| &#xA;manifest-sha256:a0264d60f80df12bc1e6dd98bae6c43debe6667c0ba482711f0d806493467a46: done           |&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;| &#xA;layer-sha256:bca4290a96390d7a6fc6f2f9929370d06f8dfcacba591c76e3d5c5044e7f420c:    done           |&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;| &#xA;config-sha256:ace17d5d883e9ea5a21138d0608d60aa2376c68f616c55b0b7e73fba6d8556a3:   done           |&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;&amp;#43;| &#xA;elapsed: 2.3 s                                                                    total:   0.0 B (0.0 B/s)                                         &#xA;unpacking linux/arm64/v8 sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b...&#xA;done: 5.499208ms&#x9;&#xA;sangam@sangam:~$ sudo ctr run --cni --runtime io.containerd.run.kata.v2 -t --rm docker.io/library/busybox:latest hello ech sangam&#xA;/ # &lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;configure-with-docker&#34;&gt;Configure with Docker &lt;a href=&#34;#configure-with-docker&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;07a8c5b&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sam@sam:~$ cat &amp;lt;&amp;lt;EOF | sudo tee &amp;#34;/usr/bin/containerd-shim-kata_$(echo &amp;#34;$VERSION&amp;#34; | sed &amp;#39;s/\./_/g&amp;#39;)-v2&amp;#34; &amp;gt; /dev/null&#xA;#!/bin/sh&#xA;export KATA_CONF_FILE=&amp;#34;$DIR/share/defaults/kata-containers/configuration.toml&amp;#34;&#xA;export PATH=&amp;#34;$DIR/bin:\$PATH&amp;#34;&#xA;exec $DIR/bin/containerd-shim-kata-v2 &amp;#34;\$@&amp;#34;&#xA;EOF&#xA;&#xA;sudo chmod &amp;#43;x &amp;#34;/usr/bin/containerd-shim-kata_$(echo &amp;#34;$VERSION&amp;#34; | sed &amp;#39;s/\./_/g&amp;#39;)-v2&amp;#34;&#xA;[sudo] password for sam: &#xA;sam@sam:~$ cat &amp;lt;&amp;lt;EOF | sudo tee &amp;#34;/usr/bin/kata-runtime-$VERSION&amp;#34; &amp;gt; /dev/null&#xA;#!/bin/sh&#xA;export KATA_CONF_FILE=&amp;#34;$DIR/share/defaults/kata-containers/configuration.toml&amp;#34;&#xA;export PATH=&amp;#34;$DIR/bin:\$PATH&amp;#34;&#xA;exec $DIR/bin/kata-runtime &amp;#34;\$@&amp;#34;&#xA;EOF&#xA;&#xA;sudo chmod &amp;#43;x &amp;#34;/usr/bin/kata-runtime-$VERSION&amp;#34;&#xA;sam@sam:~$ echo &amp;#34;io.containerd.run.kata_$(echo &amp;#34;$VERSION&amp;#34; | sed &amp;#39;s/\./_/g&amp;#39;).v2&amp;#34;&#xA;io.containerd.run.kata_.v2&#xA;sam@sam:~$ sudo docker run -d --name nginx nginx&#xA;Unable to find image &amp;#39;nginx:latest&amp;#39; locally&#xA;latest: Pulling from library/nginx&#xA;7ce705000c39: Pull complete &#xA;b3e9225c8fca: Pull complete &#xA;2b39a3d0829e: Pull complete &#xA;6d24e34787c7: Pull complete &#xA;066d623ff8e6: Pull complete &#xA;49486a4a61a6: Pull complete &#xA;34d83bb3522a: Pull complete &#xA;Digest: sha256:0a399eb16751829e1af26fea27b20c3ec28d7ab1fb72182879dcae1cca21206a&#xA;Status: Downloaded newer image for nginx:latest&#xA;421ac9fbcf95ed8360f4b76fe230effd619ce993c64d9f3d7e5dfd248f655689&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;</description>
    </item>
    <item>
      <title> firecracker </title>
      <link>//localhost:1313/docs/containerd/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/firecracker/</guid>
      <description>&lt;p&gt;get docker installed &lt;a href=&#34;https://get.docker.com&#34; rel=&#34;external&#34; target=&#34;_blank&#34;&gt;https://get.docker.com&lt;svg width=&#34;16&#34; height=&#34;16&#34; viewBox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z&#34;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;build-firecracker&#34;&gt;build firecracker &lt;a href=&#34;#build-firecracker&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;git clone &lt;a href=&#34;https://github.com/firecracker-microvm/firecracker&#34; rel=&#34;external&#34; target=&#34;_blank&#34;&gt;https://github.com/firecracker-microvm/firecracker&lt;svg width=&#34;16&#34; height=&#34;16&#34; viewBox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z&#34;/&gt;&lt;/svg&gt;&lt;/a&gt;&#xA;cd firecracker&#xA;tools/devtool build&#xA;toolchain=&amp;quot;$(uname -m)-unknown-linux-musl&amp;quot;&lt;/p&gt;</description>
    </item>
    <item>
      <title> ContainerD &#43; Crun </title>
      <link>//localhost:1313/docs/containerd/crun/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/crun/</guid>
      <description>&lt;h3 id=&#34;install-on-ubuntu&#34;&gt;Install on ubuntu &lt;a href=&#34;#install-on-ubuntu&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;3c6a0ae&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;$ sudo apt-get install -y make git gcc build-essential pkgconf libtool \&#xA;   libsystemd-dev libprotobuf-c-dev libcap-dev libseccomp-dev libyajl-dev \&#xA;   go-md2man autoconf python3 automake&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;containerd-configuration&#34;&gt;ContainerD Configuration &lt;a href=&#34;#containerd-configuration&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;b3696c0&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;demo@sangam:~$ sudo mkdir -p /etc/containerd/&#xA;demo@sangam:~$ sudo tee /etc/containerd/config.toml &amp;gt; /dev/null &amp;lt;&amp;lt;EOT&#xA;version = 2&#xA;[plugins.&amp;#34;io.containerd.runtime.v1.linux&amp;#34;]&#xA;  shim_debug = false&#xA;[plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd]&#xA;  default_runtime_name = &amp;#34;crun&amp;#34;&#xA;  [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes]&#xA;    [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes.crun]&#xA;      runtime_type = &amp;#34;io.containerd.runc.v2&amp;#34;&#xA;      [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes.crun.options]&#xA;        BinaryName = &amp;#34;/usr/local/bin/crun&amp;#34;&#xA;        SystemdCgroup = true&#xA;[plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes.runsc]&#xA;  runtime_type = &amp;#34;io.containerd.runsc.v1&amp;#34;&#xA;  [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.containerd.runtimes.runsc.options]&#xA;    SystemdCgroup = true&#xA;[plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry.mirrors]&#xA;  [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry.mirrors.&amp;#34;docker.io&amp;#34;]&#xA;    endpoint = [&amp;#34;https:///mirror.blabla.com&amp;#34;]&#xA;[plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;.registry.configs.&amp;#34;https://mirror.blabla.com&amp;#34;.tls]&#xA;  insecure_skip_verify = true&#xA;EOT&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;retart-containerd&#34;&gt;retart containerd &lt;a href=&#34;#retart-containerd&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;778ed58&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo systemctl restart containerd&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;install-crun-via-binary&#34;&gt;install crun via binary &lt;a href=&#34;#install-crun-via-binary&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;f0321a8&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;demo@sangam:~$ sudo wget -O /usr/local/bin/crun https://github.com/containers/crun/releases/download/1.14.1/crun-1.14.1-linux-arm64&#xA;--2024-02-12 13:26:38--  https://github.com/containers/crun/releases/download/1.14.1/crun-1.14.1-linux-arm64&#xA;Resolving github.com (github.com)... 20.207.73.82&#xA;Connecting to github.com (github.com)|20.207.73.82|:443... connected.&#xA;HTTP request sent, awaiting response... 302 Found&#xA;Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/103446460/619d03a9-6b84-4fac-a92d-5be09717e733?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20240212%2Fus-east-1%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20240212T132639Z&amp;amp;X-Amz-Expires=300&amp;amp;X-Amz-Signature=dba69c9cb3f2dde5423829fd647f067880de88e3d64cac1b81433f8c4ca68b1c&amp;amp;X-Amz-SignedHeaders=host&amp;amp;actor_id=0&amp;amp;key_id=0&amp;amp;repo_id=103446460&amp;amp;response-content-disposition=attachment%3B%20filename%3Dcrun-1.14.1-linux-arm64&amp;amp;response-content-type=application%2Foctet-stream [following]&#xA;--2024-02-12 13:26:39--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/103446460/619d03a9-6b84-4fac-a92d-5be09717e733?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20240212%2Fus-east-1%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20240212T132639Z&amp;amp;X-Amz-Expires=300&amp;amp;X-Amz-Signature=dba69c9cb3f2dde5423829fd647f067880de88e3d64cac1b81433f8c4ca68b1c&amp;amp;X-Amz-SignedHeaders=host&amp;amp;actor_id=0&amp;amp;key_id=0&amp;amp;repo_id=103446460&amp;amp;response-content-disposition=attachment%3B%20filename%3Dcrun-1.14.1-linux-arm64&amp;amp;response-content-type=application%2Foctet-stream&#xA;Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.109.133, 185.199.108.133, 185.199.110.133, ...&#xA;Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.109.133|:443... connected.&#xA;HTTP request sent, awaiting response... 200 OK&#xA;Length: 2578376 (2.5M) [application/octet-stream]&#xA;Saving to: ‘/usr/local/bin/crun’&#xA;&#xA;/usr/local/bin/crun                                             100%[=====================================================================================================================================================&amp;gt;]   2.46M  --.-KB/s    in 0.1s    &#xA;&#xA;2024-02-12 13:26:40 (18.5 MB/s) - ‘/usr/local/bin/crun’ saved [2578376/2578376]&#xA;&#xA;demo@sangam:~$ sudo chmod &amp;#43;x /usr/local/bin/crun&#xA;&#xA;demo@sangam:~$ sudo systemctl status containerd&#xA;● containerd.service - containerd container runtime&#xA;     Loaded: loaded (/lib/systemd/system/containerd.service; enabled; vendor preset: enabled)&#xA;     Active: active (running) since Mon 2024-02-12 13:16:10 UTC; 5min ago&#xA;       Docs: https://containerd.io&#xA;    Process: 3701 ExecStartPre=/sbin/modprobe overlay (code=exited, status=0/SUCCESS)&#xA;   Main PID: 3702 (containerd)&#xA;      Tasks: 9&#xA;     Memory: 17.0M&#xA;        CPU: 2.184s&#xA;     CGroup: /system.slice/containerd.service&#xA;             └─3702 /usr/bin/containerd&#xA;&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184407637Z&amp;#34; level=info msg=&amp;#34;Start subscribing containerd event&amp;#34;&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184447344Z&amp;#34; level=info msg=serving... address=/run/containerd/containerd.sock.ttrpc&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184467552Z&amp;#34; level=info msg=serving... address=/run/containerd/containerd.sock&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184489718Z&amp;#34; level=info msg=&amp;#34;Start recovering state&amp;#34;&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184541342Z&amp;#34; level=info msg=&amp;#34;Start event monitor&amp;#34;&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184567425Z&amp;#34; level=info msg=&amp;#34;Start snapshots syncer&amp;#34;&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184592133Z&amp;#34; level=info msg=&amp;#34;Start cni network conf syncer for default&amp;#34;&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.184614341Z&amp;#34; level=info msg=&amp;#34;Start streaming server&amp;#34;&#xA;Feb 12 13:16:10 sangam systemd[1]: Started containerd container runtime.&#xA;Feb 12 13:16:10 sangam containerd[3702]: time=&amp;#34;2024-02-12T13:16:10.186432221Z&amp;#34; level=info msg=&amp;#34;containerd successfully booted in 0.018562s&amp;#34;&#xA;demo@sangam:~$ sudo ctr image ls&#xA;REF                                    TYPE                                       DIGEST                                                                  SIZE      PLATFORMS                                                                                                                                           LABELS &#xA;docker.io/library/hello-world:latest   application/vnd.oci.image.index.v1&amp;#43;json    sha256:4bd78111b6914a99dbc560e6a20eab57ff6655aea4a80c50b0c5491968cbc2e6 13.4 KiB  linux/386,linux/amd64,linux/arm/v5,linux/arm/v7,linux/arm64/v8,linux/mips64le,linux/ppc64le,linux/riscv64,linux/s390x,unknown/unknown,windows/amd64 -      &#xA;docker.io/wasmedge/example-wasi:latest application/vnd.oci.image.manifest.v1&amp;#43;json sha256:93e459b5a06630acdc486600549c2722be11a985ffd48a349ee811053c60ac13 511.7 KiB linux/amd64                                                                                                                                         -      &#xA;&#xA;&#xA;&#xA; sudo ctr run --rm --runc-binary=/usr/local/bin/crun docker.io/library/hello-world:latest hello&#xA;&#xA;Hello from Docker!&#xA;This message shows that your installation appears to be working correctly.&#xA;&#xA;To generate this message, Docker took the following steps:&#xA; 1. The Docker client contacted the Docker daemon.&#xA; 2. The Docker daemon pulled the &amp;#34;hello-world&amp;#34; image from the Docker Hub.&#xA;    (arm64v8)&#xA; 3. The Docker daemon created a new container from that image which runs the&#xA;    executable that produces the output you are currently reading.&#xA; 4. The Docker daemon streamed that output to the Docker client, which sent it&#xA;    to your terminal.&#xA;&#xA;To try something more ambitious, you can run an Ubuntu container with:&#xA; $ docker run -it ubuntu bash&#xA;&#xA;Share images, automate workflows, and more with a free Docker ID:&#xA; https://hub.docker.com/&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;</description>
    </item>
    <item>
      <title> contaiNERD &#43; nerdctl </title>
      <link>//localhost:1313/docs/containerd/nerdctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/nerdctl/</guid>
      <description>&lt;h3 id=&#34;install-containerd--nerctl&#34;&gt;install ContainerD + nerctl &lt;a href=&#34;#install-containerd--nerctl&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;9e03d13&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;wget https://github.com/containerd/nerdctl/releases/download/v1.7.3/nerdctl-1.7.3-linux-arm64.tar.gz&#xA;tar -xzf nerdctl-1.7.3-linux-arm64.tar.gz&#xA;sudo mv ./nerdctl /usr/local/bin&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;verify-nerctl&#34;&gt;verify nerctl &lt;a href=&#34;#verify-nerctl&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;237b7c7&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sangam@demo:~$ sudo nerdctl&#xA;nerdctl is a command line interface for containerd&#xA;&#xA;Config file ($NERDCTL_TOML): /etc/nerdctl/nerdctl.toml&#xA;&#xA;Usage: nerdctl [flags]&#xA;&#xA;Management commands:&#xA;  apparmor   Manage AppArmor profiles&#xA;  builder    Manage builds&#xA;  container  Manage containers&#xA;  image      Manage images&#xA;  ipfs       Distributing images on IPFS&#xA;  namespace  Manage containerd namespaces&#xA;  network    Manage networks&#xA;  system     Manage containerd&#xA;  volume     Manage volumes&#xA;&#xA;Commands:&#xA;  attach      Attach stdin, stdout, and stderr to a running container.&#xA;  build       Build an image from a Dockerfile. Needs buildkitd to be running.&#xA;  commit      Create a new image from a container&amp;#39;s changes&#xA;  completion  Generate the autocompletion script for the specified shell&#xA;  compose     Compose&#xA;  cp          Copy files/folders between a running container and the local filesystem.&#xA;  create      Create a new container. Optionally specify &amp;#34;ipfs://&amp;#34; or &amp;#34;ipns://&amp;#34; scheme to pull image from IPFS.&#xA;  diff        Inspect changes to files or directories on a container&amp;#39;s filesystem&#xA;  events      Get real time events from the server&#xA;  exec        Run a command in a running container&#xA;  help        Help about any command&#xA;  history     Show the history of an image&#xA;  images      List images&#xA;  info        Display system-wide information&#xA;  inspect     Return low-level information on objects.&#xA;  kill        Kill one or more running containers&#xA;  load        Load an image from a tar archive or STDIN&#xA;  login       Log in to a container registry&#xA;  logout      Log out from a container registry&#xA;  logs        Fetch the logs of a container. Expected to be used with &amp;#39;nerdctl run -d&amp;#39;.&#xA;  pause       Pause all processes within one or more containers&#xA;  port        List port mappings or a specific mapping for the container&#xA;  ps          List containers&#xA;  pull        Pull an image from a registry. Optionally specify &amp;#34;ipfs://&amp;#34; or &amp;#34;ipns://&amp;#34; scheme to pull image from IPFS.&#xA;  push        Push an image or a repository to a registry. Optionally specify &amp;#34;ipfs://&amp;#34; or &amp;#34;ipns://&amp;#34; scheme to push image to IPFS.&#xA;  rename      rename a container&#xA;  restart     Restart one or more running containers&#xA;  rm          Remove one or more containers&#xA;  rmi         Remove one or more images&#xA;  run         Run a command in a new container. Optionally specify &amp;#34;ipfs://&amp;#34; or &amp;#34;ipns://&amp;#34; scheme to pull image from IPFS.&#xA;  save        Save one or more images to a tar archive (streamed to STDOUT by default)&#xA;  start       Start one or more running containers&#xA;  stats       Display a live stream of container(s) resource usage statistics.&#xA;  stop        Stop one or more running containers&#xA;  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE&#xA;  top         Display the running processes of a container&#xA;  unpause     Unpause all processes within one or more containers&#xA;  update      Update one or more running containers&#xA;  version     Show the nerdctl version information&#xA;  wait        Block until one or more containers stop, then print their exit codes.&#xA;&#xA;Flags:&#xA;  -H, --H string                 Alias of --address (default &amp;#34;/run/containerd/containerd.sock&amp;#34;)&#xA;  -a, --a string                 Alias of --address (default &amp;#34;/run/containerd/containerd.sock&amp;#34;)&#xA;      --address string           containerd address, optionally with &amp;#34;unix://&amp;#34; prefix [$CONTAINERD_ADDRESS] (default &amp;#34;/run/containerd/containerd.sock&amp;#34;)&#xA;      --cgroup-manager string    Cgroup manager to use (&amp;#34;cgroupfs&amp;#34;|&amp;#34;systemd&amp;#34;) (default &amp;#34;systemd&amp;#34;)&#xA;      --cni-netconfpath string   cni config directory [$NETCONFPATH] (default &amp;#34;/etc/cni/net.d&amp;#34;)&#xA;      --cni-path string          cni plugins binary directory [$CNI_PATH] (default &amp;#34;/opt/cni/bin&amp;#34;)&#xA;      --data-root string         Root directory of persistent nerdctl state (managed by nerdctl, not by containerd) (default &amp;#34;/var/lib/nerdctl&amp;#34;)&#xA;      --debug                    debug mode&#xA;      --debug-full               debug mode (with full output)&#xA;      --experimental             Control experimental: https://github.com/containerd/nerdctl/blob/main/docs/experimental.md [$NERDCTL_EXPERIMENTAL] (default true)&#xA;  -h, --help                     help for nerdctl&#xA;      --host string              Alias of --address (default &amp;#34;/run/containerd/containerd.sock&amp;#34;)&#xA;      --host-gateway-ip string   IP address that the special &amp;#39;host-gateway&amp;#39; string in --add-host resolves to. Defaults to the IP address of the host. It has no effect without setting --add-host [$NERDCTL_HOST_GATEWAY_IP] (default &amp;#34;192.168.129.131&amp;#34;)&#xA;      --hosts-dir strings        A directory that contains &amp;lt;HOST:PORT&amp;gt;/hosts.toml (containerd style) or &amp;lt;HOST:PORT&amp;gt;/{ca.cert, cert.pem, key.pem} (docker style) (default [/etc/containerd/certs.d,/etc/docker/certs.d])&#xA;      --insecure-registry        skips verifying HTTPS certs, and allows falling back to plain HTTP&#xA;  -n, --n string                 Alias of --namespace (default &amp;#34;default&amp;#34;)&#xA;      --namespace string         containerd namespace, such as &amp;#34;moby&amp;#34; for Docker, &amp;#34;k8s.io&amp;#34; for Kubernetes [$CONTAINERD_NAMESPACE] (default &amp;#34;default&amp;#34;)&#xA;      --snapshotter string       containerd snapshotter [$CONTAINERD_SNAPSHOTTER] (default &amp;#34;overlayfs&amp;#34;)&#xA;      --storage-driver string    Alias of --snapshotter (default &amp;#34;overlayfs&amp;#34;)&#xA;  -v, --version                  version for nerdctl&#xA;&#xA;Run &amp;#39;nerdctl COMMAND --help&amp;#39; for more information on a command.&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;nerdctl-system-info&#34;&gt;nerdctl system info &lt;a href=&#34;#nerdctl-system-info&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;99c256c&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sangam@demo:~$ sudo nerdctl system info&#xA;Client:&#xA; Namespace:&#x9;default&#xA; Debug Mode:&#x9;false&#xA;&#xA;Server:&#xA; Server Version: 1.7.2&#xA; Storage Driver: overlayfs&#xA; Logging Driver: json-file&#xA; Cgroup Driver: systemd&#xA; Cgroup Version: 2&#xA; Plugins:&#xA;  Log: fluentd journald json-file syslog&#xA;  Storage: native overlayfs&#xA; Security Options:&#xA;  apparmor&#xA;  seccomp&#xA;   Profile: builtin&#xA;  cgroupns&#xA; Kernel Version: 5.15.0-94-generic&#xA; Operating System: Ubuntu 22.04.3 LTS&#xA; OSType: linux&#xA; Architecture: aarch64&#xA; CPUs: 2&#xA; Total Memory: 3.817GiB&#xA; Name: demo&#xA; ID: 62d52903-e7f5-4811-9793-3d4d191f325f&#xA;&#xA;WARNING: IPv4 forwarding is disabled&#xA;WARNING: bridge-nf-call-iptables is disabled&#xA;WARNING: bridge-nf-call-ip6tables is disabled&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;install-cni-plugin&#34;&gt;install cni plugin &lt;a href=&#34;#install-cni-plugin&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;b58b74c&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-arm64-v1.1.1.tgz&#xA;&#xA;sudo tar Cxzvf /opt/cni/bin cni-plugins-linux-arm64-v1.1.1.tgz&#xA;./&#xA;./macvlan&#xA;./static&#xA;./vlan&#xA;./portmap&#xA;./host-local&#xA;./vrf&#xA;./bridge&#xA;./tuning&#xA;./firewall&#xA;./host-device&#xA;./sbr&#xA;./loopback&#xA;./dhcp&#xA;./ptp&#xA;./ipvlan&#xA;./bandwidth&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;make-sure-iptables-package-installed&#34;&gt;make sure iptables package installed &lt;a href=&#34;#make-sure-iptables-package-installed&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;f686840&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sudo apt-get install iptables&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;run-first-hello-world-container&#34;&gt;run first hello world container &lt;a href=&#34;#run-first-hello-world-container&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;327a6c4&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;sangam@demo:~$ sudo nerdctl run hello-world&#xA;&#xA;Hello from Docker!&#xA;This message shows that your installation appears to be working correctly.&#xA;&#xA;To generate this message, Docker took the following steps:&#xA; 1. The Docker client contacted the Docker daemon.&#xA; 2. The Docker daemon pulled the &amp;#34;hello-world&amp;#34; image from the Docker Hub.&#xA;    (arm64v8)&#xA; 3. The Docker daemon created a new container from that image which runs the&#xA;    executable that produces the output you are currently reading.&#xA; 4. The Docker daemon streamed that output to the Docker client, which sent it&#xA;    to your terminal.&#xA;&#xA;To try something more ambitious, you can run an Ubuntu container with:&#xA; $ docker run -it ubuntu bash&#xA;&#xA;Share images, automate workflows, and more with a free Docker ID:&#xA; https://hub.docker.com/&#xA;&#xA;For more examples and ideas, visit:&#xA; https://docs.docker.com/get-started/&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h1 id=&#34;nerdctl-command-cheatsheet&#34;&gt;nerdctl Command Cheatsheet &lt;a href=&#34;#nerdctl-command-cheatsheet&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;nerdctl is a Docker-compatible CLI for containerd. This cheatsheet provides a quick overview of commonly used commands.&lt;/p&gt;</description>
    </item>
    <item>
      <title> contaiNERD &#43; runwasi </title>
      <link>//localhost:1313/docs/containerd/runwasi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/runwasi/</guid>
      <description>&lt;h4 id=&#34;install-rust&#34;&gt;install rust &lt;a href=&#34;#install-rust&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;b9ae834&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;clone-runwasi&#34;&gt;clone runwasi &lt;a href=&#34;#clone-runwasi&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;d844cdd&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;$ git clone https://github.com/containerd/runwasi.git&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;install-wasmedge-containerd-shim&#34;&gt;install wasmedge-containerd-shim &lt;a href=&#34;#install-wasmedge-containerd-shim&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;6fe61be&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;cd runwasi&#xA;make build-wasmedge&#xA;INSTALL=&amp;#34;sudo install&amp;#34; LN=&amp;#34;sudo ln -sf&amp;#34; make install-wasmedge&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h3 id=&#34;run-wasm-using-ctr-cli&#34;&gt;run wasm using ctr cli &lt;a href=&#34;#run-wasm-using-ctr-cli&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;ae5dd3f&#34; class=&#34;language- &#34;&gt;&#xA;  &lt;code&gt;make load&#xA;sudo ctr run --rm --runtime=io.containerd.wasmedge.v1 ghcr.io/containerd/runwasi/wasi-demo-app:latest testwasm /wasi-demo-app.wasm echo &amp;#39;hello&amp;#39;&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;</description>
    </item>
    <item>
      <title>Wasm &#43; ContainerD &#43; CRUN </title>
      <link>//localhost:1313/docs/containerd/wasm-containerd-crun/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerd/wasm-containerd-crun/</guid>
      <description>&lt;h2 id=&#34;installing-wasmedge&#34;&gt;Installing WasmEdge &lt;a href=&#34;#installing-wasmedge&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;f320f48&#34; class=&#34;language-bash &#34;&gt;&#xA;  &lt;code&gt;curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash&#xA;source $HOME/.wasmedge/env&#xA;&#xA;&amp;gt; Using Python: /usr/bin/python3 &#xA;INFO    - CUDA cannot be detected via nvcc&#xA;INFO    - CUDA 12.x cannot be detected via nvidia-smi&#xA;INFO    - Compatible with current configuration&#xA;INFO    - Running Uninstaller&#xA;WARNING - Uninstaller did not find previous installation&#xA;WARNING - SHELL variable not found. Using bash as SHELL&#xA;INFO    - shell configuration updated&#xA;INFO    - Downloading WasmEdge&#xA;|============================================================|100.00 %INFO    - Downloaded&#xA;INFO    - Installing WasmEdge&#xA;INFO    - WasmEdge Successfully installed&#xA;INFO    - Run:&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h4 id=&#34;verify-installation&#34;&gt;Verify installation &lt;a href=&#34;#verify-installation&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;dcd7dd5&#34; class=&#34;language-bash &#34;&gt;&#xA;  &lt;code&gt;wasmedge --version&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;the response would be something:-&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
